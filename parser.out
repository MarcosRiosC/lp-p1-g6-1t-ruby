Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BEGIN
    BREAK
    CASE
    CLASS
    COINCIDENCE
    COMPOSITION
    DO
    DOUBLE_QUOTE
    ENSURE
    FALSE
    L_SQUARE_BRACKET
    NEGATION
    NIL
    NOT
    OR
    QUOTATION_MARK
    RESCUE
    RETRY
    RETURN
    R_SQUARE_BRACKET
    THEN
    TRUE
    UNLESS
    UNTIL
    WHEN
    WRENCH_L
    WRENCH_R

Grammar

Rule 0     S' -> sentencia
Rule 1     sentencia -> funcion
Rule 2     sentencia -> declaracion
Rule 3     sentencia -> expresion
Rule 4     sentencia -> estructura
Rule 5     sentencia -> print
Rule 6     funcion -> DEF VARIABLE_LOCAL L_PAREN parametros R_PAREN cuerpo END
Rule 7     parametros -> VARIABLE_LOCAL
Rule 8     parametros -> VARIABLE_LOCAL COMMA parametros
Rule 9     cuerpo -> declaracion
Rule 10    cuerpo -> declaracion cuerpo
Rule 11    cuerpo -> print
Rule 12    cuerpo -> print cuerpo
Rule 13    cuerpo -> expresion
Rule 14    cuerpo -> expresion cuerpo
Rule 15    declaracion -> variable EQUAL expresion
Rule 16    variable -> VARIABLE_LOCAL
Rule 17    variable -> VARIABLE_INSTANCE
Rule 18    variable -> VARIABLE_CLASS
Rule 19    variable -> VARIABLE_GLOBAL
Rule 20    variable -> CONSTANT
Rule 21    expresion -> expresion PLUS term
Rule 22    expresion -> expresion MINUS term
Rule 23    expresion -> expresion MULTIPLICATION term
Rule 24    expresion -> expresion DIVIDE term
Rule 25    expresion -> expresion EXPONENT term
Rule 26    expresion -> expresion MODULE term
Rule 27    expresion -> expresion AND_LOGIC term
Rule 28    expresion -> expresion OR_LOGIC term
Rule 29    expresion -> expresion EQUALITY term
Rule 30    expresion -> expresion EQUALITY_OF_CASE term
Rule 31    expresion -> expresion GREATER_EQUAL term
Rule 32    expresion -> expresion GREATER_THAN term
Rule 33    expresion -> expresion SMALLER_THAN term
Rule 34    expresion -> expresion SMALLER_EQUAL term
Rule 35    expresion -> term
Rule 36    term -> NUMBER
Rule 37    term -> variable
Rule 38    term -> L_PAREN expresion R_PAREN
Rule 39    print -> PUTS L_PAREN expresion R_PAREN
Rule 40    print -> PUTS L_PAREN variable R_PAREN
Rule 41    print -> PUTS L_PAREN R_PAREN
Rule 42    print -> PUTS STRING
Rule 43    estructura -> estructuraCondicional
Rule 44    estructura -> estructuraIterativa
Rule 45    estructuraCondicional -> estructuraif END
Rule 46    estructuraCondicional -> estructuraif estructuraelse END
Rule 47    estructuraCondicional -> estructuraif estructuraelseif END
Rule 48    estructuraif -> IF expresion cuerpo
Rule 49    estructuraelseif -> ELSIF expresion cuerpo
Rule 50    estructuraelse -> ELSE cuerpo
Rule 51    estructuraIterativa -> sentenciafor END
Rule 52    estructuraIterativa -> sentenciawhile END
Rule 53    sentenciafor -> FOR variable IN L_PAREN NUMBER DOUBLE_POINT NUMBER R_PAREN cuerpo
Rule 54    sentenciawhile -> WHILE expresion cuerpo

Terminals, with rules where they appear

AND                  : 
AND_LOGIC            : 27
BEGIN                : 
BREAK                : 
CASE                 : 
CLASS                : 
COINCIDENCE          : 
COMMA                : 8
COMPOSITION          : 
CONSTANT             : 20
DEF                  : 6
DIVIDE               : 24
DO                   : 
DOUBLE_POINT         : 53
DOUBLE_QUOTE         : 
ELSE                 : 50
ELSIF                : 49
END                  : 6 45 46 47 51 52
ENSURE               : 
EQUAL                : 15
EQUALITY             : 29
EQUALITY_OF_CASE     : 30
EXPONENT             : 25
FALSE                : 
FOR                  : 53
GREATER_EQUAL        : 31
GREATER_THAN         : 32
IF                   : 48
IN                   : 53
L_PAREN              : 6 38 39 40 41 53
L_SQUARE_BRACKET     : 
MINUS                : 22
MODULE               : 26
MULTIPLICATION       : 23
NEGATION             : 
NIL                  : 
NOT                  : 
NUMBER               : 36 53 53
OR                   : 
OR_LOGIC             : 28
PLUS                 : 21
PUTS                 : 39 40 41 42
QUOTATION_MARK       : 
RESCUE               : 
RETRY                : 
RETURN               : 
R_PAREN              : 6 38 39 40 41 53
R_SQUARE_BRACKET     : 
SMALLER_EQUAL        : 34
SMALLER_THAN         : 33
STRING               : 42
THEN                 : 
TRUE                 : 
UNLESS               : 
UNTIL                : 
VARIABLE_CLASS       : 18
VARIABLE_GLOBAL      : 19
VARIABLE_INSTANCE    : 17
VARIABLE_LOCAL       : 6 7 8 16
WHEN                 : 
WHILE                : 54
WRENCH_L             : 
WRENCH_R             : 
error                : 

Nonterminals, with rules where they appear

cuerpo               : 6 10 12 14 48 49 50 53 54
declaracion          : 2 9 10
estructura           : 4
estructuraCondicional : 43
estructuraIterativa  : 44
estructuraelse       : 46
estructuraelseif     : 47
estructuraif         : 45 46 47
expresion            : 3 13 14 15 21 22 23 24 25 26 27 28 29 30 31 32 33 34 38 39 48 49 54
funcion              : 1
parametros           : 6 8
print                : 5 11 12
sentencia            : 0
sentenciafor         : 51
sentenciawhile       : 52
term                 : 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
variable             : 15 37 40 53

Parsing method: LALR

state 0

    (0) S' -> . sentencia
    (1) sentencia -> . funcion
    (2) sentencia -> . declaracion
    (3) sentencia -> . expresion
    (4) sentencia -> . estructura
    (5) sentencia -> . print
    (6) funcion -> . DEF VARIABLE_LOCAL L_PAREN parametros R_PAREN cuerpo END
    (15) declaracion -> . variable EQUAL expresion
    (21) expresion -> . expresion PLUS term
    (22) expresion -> . expresion MINUS term
    (23) expresion -> . expresion MULTIPLICATION term
    (24) expresion -> . expresion DIVIDE term
    (25) expresion -> . expresion EXPONENT term
    (26) expresion -> . expresion MODULE term
    (27) expresion -> . expresion AND_LOGIC term
    (28) expresion -> . expresion OR_LOGIC term
    (29) expresion -> . expresion EQUALITY term
    (30) expresion -> . expresion EQUALITY_OF_CASE term
    (31) expresion -> . expresion GREATER_EQUAL term
    (32) expresion -> . expresion GREATER_THAN term
    (33) expresion -> . expresion SMALLER_THAN term
    (34) expresion -> . expresion SMALLER_EQUAL term
    (35) expresion -> . term
    (43) estructura -> . estructuraCondicional
    (44) estructura -> . estructuraIterativa
    (39) print -> . PUTS L_PAREN expresion R_PAREN
    (40) print -> . PUTS L_PAREN variable R_PAREN
    (41) print -> . PUTS L_PAREN R_PAREN
    (42) print -> . PUTS STRING
    (16) variable -> . VARIABLE_LOCAL
    (17) variable -> . VARIABLE_INSTANCE
    (18) variable -> . VARIABLE_CLASS
    (19) variable -> . VARIABLE_GLOBAL
    (20) variable -> . CONSTANT
    (36) term -> . NUMBER
    (37) term -> . variable
    (38) term -> . L_PAREN expresion R_PAREN
    (45) estructuraCondicional -> . estructuraif END
    (46) estructuraCondicional -> . estructuraif estructuraelse END
    (47) estructuraCondicional -> . estructuraif estructuraelseif END
    (51) estructuraIterativa -> . sentenciafor END
    (52) estructuraIterativa -> . sentenciawhile END
    (48) estructuraif -> . IF expresion cuerpo
    (53) sentenciafor -> . FOR variable IN L_PAREN NUMBER DOUBLE_POINT NUMBER R_PAREN cuerpo
    (54) sentenciawhile -> . WHILE expresion cuerpo

    DEF             shift and go to state 7
    PUTS            shift and go to state 14
    VARIABLE_LOCAL  shift and go to state 8
    VARIABLE_INSTANCE shift and go to state 15
    VARIABLE_CLASS  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 17
    CONSTANT        shift and go to state 18
    NUMBER          shift and go to state 19
    L_PAREN         shift and go to state 9
    IF              shift and go to state 23
    FOR             shift and go to state 24
    WHILE           shift and go to state 25

    sentencia                      shift and go to state 1
    funcion                        shift and go to state 2
    declaracion                    shift and go to state 3
    expresion                      shift and go to state 4
    estructura                     shift and go to state 5
    print                          shift and go to state 6
    variable                       shift and go to state 10
    term                           shift and go to state 11
    estructuraCondicional          shift and go to state 12
    estructuraIterativa            shift and go to state 13
    estructuraif                   shift and go to state 20
    sentenciafor                   shift and go to state 21
    sentenciawhile                 shift and go to state 22

state 1

    (0) S' -> sentencia .



state 2

    (1) sentencia -> funcion .

    $end            reduce using rule 1 (sentencia -> funcion .)


state 3

    (2) sentencia -> declaracion .

    $end            reduce using rule 2 (sentencia -> declaracion .)


state 4

    (3) sentencia -> expresion .
    (21) expresion -> expresion . PLUS term
    (22) expresion -> expresion . MINUS term
    (23) expresion -> expresion . MULTIPLICATION term
    (24) expresion -> expresion . DIVIDE term
    (25) expresion -> expresion . EXPONENT term
    (26) expresion -> expresion . MODULE term
    (27) expresion -> expresion . AND_LOGIC term
    (28) expresion -> expresion . OR_LOGIC term
    (29) expresion -> expresion . EQUALITY term
    (30) expresion -> expresion . EQUALITY_OF_CASE term
    (31) expresion -> expresion . GREATER_EQUAL term
    (32) expresion -> expresion . GREATER_THAN term
    (33) expresion -> expresion . SMALLER_THAN term
    (34) expresion -> expresion . SMALLER_EQUAL term

    $end            reduce using rule 3 (sentencia -> expresion .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    MULTIPLICATION  shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    MODULE          shift and go to state 31
    AND_LOGIC       shift and go to state 32
    OR_LOGIC        shift and go to state 33
    EQUALITY        shift and go to state 34
    EQUALITY_OF_CASE shift and go to state 35
    GREATER_EQUAL   shift and go to state 36
    GREATER_THAN    shift and go to state 37
    SMALLER_THAN    shift and go to state 38
    SMALLER_EQUAL   shift and go to state 39


state 5

    (4) sentencia -> estructura .

    $end            reduce using rule 4 (sentencia -> estructura .)


state 6

    (5) sentencia -> print .

    $end            reduce using rule 5 (sentencia -> print .)


state 7

    (6) funcion -> DEF . VARIABLE_LOCAL L_PAREN parametros R_PAREN cuerpo END

    VARIABLE_LOCAL  shift and go to state 40


state 8

    (16) variable -> VARIABLE_LOCAL .

    EQUAL           reduce using rule 16 (variable -> VARIABLE_LOCAL .)
    PLUS            reduce using rule 16 (variable -> VARIABLE_LOCAL .)
    MINUS           reduce using rule 16 (variable -> VARIABLE_LOCAL .)
    MULTIPLICATION  reduce using rule 16 (variable -> VARIABLE_LOCAL .)
    DIVIDE          reduce using rule 16 (variable -> VARIABLE_LOCAL .)
    EXPONENT        reduce using rule 16 (variable -> VARIABLE_LOCAL .)
    MODULE          reduce using rule 16 (variable -> VARIABLE_LOCAL .)
    AND_LOGIC       reduce using rule 16 (variable -> VARIABLE_LOCAL .)
    OR_LOGIC        reduce using rule 16 (variable -> VARIABLE_LOCAL .)
    EQUALITY        reduce using rule 16 (variable -> VARIABLE_LOCAL .)
    EQUALITY_OF_CASE reduce using rule 16 (variable -> VARIABLE_LOCAL .)
    GREATER_EQUAL   reduce using rule 16 (variable -> VARIABLE_LOCAL .)
    GREATER_THAN    reduce using rule 16 (variable -> VARIABLE_LOCAL .)
    SMALLER_THAN    reduce using rule 16 (variable -> VARIABLE_LOCAL .)
    SMALLER_EQUAL   reduce using rule 16 (variable -> VARIABLE_LOCAL .)
    $end            reduce using rule 16 (variable -> VARIABLE_LOCAL .)
    R_PAREN         reduce using rule 16 (variable -> VARIABLE_LOCAL .)
    PUTS            reduce using rule 16 (variable -> VARIABLE_LOCAL .)
    VARIABLE_LOCAL  reduce using rule 16 (variable -> VARIABLE_LOCAL .)
    VARIABLE_INSTANCE reduce using rule 16 (variable -> VARIABLE_LOCAL .)
    VARIABLE_CLASS  reduce using rule 16 (variable -> VARIABLE_LOCAL .)
    VARIABLE_GLOBAL reduce using rule 16 (variable -> VARIABLE_LOCAL .)
    CONSTANT        reduce using rule 16 (variable -> VARIABLE_LOCAL .)
    NUMBER          reduce using rule 16 (variable -> VARIABLE_LOCAL .)
    L_PAREN         reduce using rule 16 (variable -> VARIABLE_LOCAL .)
    IN              reduce using rule 16 (variable -> VARIABLE_LOCAL .)
    END             reduce using rule 16 (variable -> VARIABLE_LOCAL .)
    ELSE            reduce using rule 16 (variable -> VARIABLE_LOCAL .)
    ELSIF           reduce using rule 16 (variable -> VARIABLE_LOCAL .)


state 9

    (38) term -> L_PAREN . expresion R_PAREN
    (21) expresion -> . expresion PLUS term
    (22) expresion -> . expresion MINUS term
    (23) expresion -> . expresion MULTIPLICATION term
    (24) expresion -> . expresion DIVIDE term
    (25) expresion -> . expresion EXPONENT term
    (26) expresion -> . expresion MODULE term
    (27) expresion -> . expresion AND_LOGIC term
    (28) expresion -> . expresion OR_LOGIC term
    (29) expresion -> . expresion EQUALITY term
    (30) expresion -> . expresion EQUALITY_OF_CASE term
    (31) expresion -> . expresion GREATER_EQUAL term
    (32) expresion -> . expresion GREATER_THAN term
    (33) expresion -> . expresion SMALLER_THAN term
    (34) expresion -> . expresion SMALLER_EQUAL term
    (35) expresion -> . term
    (36) term -> . NUMBER
    (37) term -> . variable
    (38) term -> . L_PAREN expresion R_PAREN
    (16) variable -> . VARIABLE_LOCAL
    (17) variable -> . VARIABLE_INSTANCE
    (18) variable -> . VARIABLE_CLASS
    (19) variable -> . VARIABLE_GLOBAL
    (20) variable -> . CONSTANT

    NUMBER          shift and go to state 19
    L_PAREN         shift and go to state 9
    VARIABLE_LOCAL  shift and go to state 8
    VARIABLE_INSTANCE shift and go to state 15
    VARIABLE_CLASS  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 17
    CONSTANT        shift and go to state 18

    expresion                      shift and go to state 41
    term                           shift and go to state 11
    variable                       shift and go to state 42

state 10

    (15) declaracion -> variable . EQUAL expresion
    (37) term -> variable .

    EQUAL           shift and go to state 43
    PLUS            reduce using rule 37 (term -> variable .)
    MINUS           reduce using rule 37 (term -> variable .)
    MULTIPLICATION  reduce using rule 37 (term -> variable .)
    DIVIDE          reduce using rule 37 (term -> variable .)
    EXPONENT        reduce using rule 37 (term -> variable .)
    MODULE          reduce using rule 37 (term -> variable .)
    AND_LOGIC       reduce using rule 37 (term -> variable .)
    OR_LOGIC        reduce using rule 37 (term -> variable .)
    EQUALITY        reduce using rule 37 (term -> variable .)
    EQUALITY_OF_CASE reduce using rule 37 (term -> variable .)
    GREATER_EQUAL   reduce using rule 37 (term -> variable .)
    GREATER_THAN    reduce using rule 37 (term -> variable .)
    SMALLER_THAN    reduce using rule 37 (term -> variable .)
    SMALLER_EQUAL   reduce using rule 37 (term -> variable .)
    $end            reduce using rule 37 (term -> variable .)
    PUTS            reduce using rule 37 (term -> variable .)
    VARIABLE_LOCAL  reduce using rule 37 (term -> variable .)
    VARIABLE_INSTANCE reduce using rule 37 (term -> variable .)
    VARIABLE_CLASS  reduce using rule 37 (term -> variable .)
    VARIABLE_GLOBAL reduce using rule 37 (term -> variable .)
    CONSTANT        reduce using rule 37 (term -> variable .)
    NUMBER          reduce using rule 37 (term -> variable .)
    L_PAREN         reduce using rule 37 (term -> variable .)
    END             reduce using rule 37 (term -> variable .)
    ELSE            reduce using rule 37 (term -> variable .)
    ELSIF           reduce using rule 37 (term -> variable .)


state 11

    (35) expresion -> term .

    PLUS            reduce using rule 35 (expresion -> term .)
    MINUS           reduce using rule 35 (expresion -> term .)
    MULTIPLICATION  reduce using rule 35 (expresion -> term .)
    DIVIDE          reduce using rule 35 (expresion -> term .)
    EXPONENT        reduce using rule 35 (expresion -> term .)
    MODULE          reduce using rule 35 (expresion -> term .)
    AND_LOGIC       reduce using rule 35 (expresion -> term .)
    OR_LOGIC        reduce using rule 35 (expresion -> term .)
    EQUALITY        reduce using rule 35 (expresion -> term .)
    EQUALITY_OF_CASE reduce using rule 35 (expresion -> term .)
    GREATER_EQUAL   reduce using rule 35 (expresion -> term .)
    GREATER_THAN    reduce using rule 35 (expresion -> term .)
    SMALLER_THAN    reduce using rule 35 (expresion -> term .)
    SMALLER_EQUAL   reduce using rule 35 (expresion -> term .)
    $end            reduce using rule 35 (expresion -> term .)
    R_PAREN         reduce using rule 35 (expresion -> term .)
    PUTS            reduce using rule 35 (expresion -> term .)
    VARIABLE_LOCAL  reduce using rule 35 (expresion -> term .)
    VARIABLE_INSTANCE reduce using rule 35 (expresion -> term .)
    VARIABLE_CLASS  reduce using rule 35 (expresion -> term .)
    VARIABLE_GLOBAL reduce using rule 35 (expresion -> term .)
    CONSTANT        reduce using rule 35 (expresion -> term .)
    NUMBER          reduce using rule 35 (expresion -> term .)
    L_PAREN         reduce using rule 35 (expresion -> term .)
    END             reduce using rule 35 (expresion -> term .)
    ELSE            reduce using rule 35 (expresion -> term .)
    ELSIF           reduce using rule 35 (expresion -> term .)


state 12

    (43) estructura -> estructuraCondicional .

    $end            reduce using rule 43 (estructura -> estructuraCondicional .)


state 13

    (44) estructura -> estructuraIterativa .

    $end            reduce using rule 44 (estructura -> estructuraIterativa .)


state 14

    (39) print -> PUTS . L_PAREN expresion R_PAREN
    (40) print -> PUTS . L_PAREN variable R_PAREN
    (41) print -> PUTS . L_PAREN R_PAREN
    (42) print -> PUTS . STRING

    L_PAREN         shift and go to state 44
    STRING          shift and go to state 45


state 15

    (17) variable -> VARIABLE_INSTANCE .

    EQUAL           reduce using rule 17 (variable -> VARIABLE_INSTANCE .)
    PLUS            reduce using rule 17 (variable -> VARIABLE_INSTANCE .)
    MINUS           reduce using rule 17 (variable -> VARIABLE_INSTANCE .)
    MULTIPLICATION  reduce using rule 17 (variable -> VARIABLE_INSTANCE .)
    DIVIDE          reduce using rule 17 (variable -> VARIABLE_INSTANCE .)
    EXPONENT        reduce using rule 17 (variable -> VARIABLE_INSTANCE .)
    MODULE          reduce using rule 17 (variable -> VARIABLE_INSTANCE .)
    AND_LOGIC       reduce using rule 17 (variable -> VARIABLE_INSTANCE .)
    OR_LOGIC        reduce using rule 17 (variable -> VARIABLE_INSTANCE .)
    EQUALITY        reduce using rule 17 (variable -> VARIABLE_INSTANCE .)
    EQUALITY_OF_CASE reduce using rule 17 (variable -> VARIABLE_INSTANCE .)
    GREATER_EQUAL   reduce using rule 17 (variable -> VARIABLE_INSTANCE .)
    GREATER_THAN    reduce using rule 17 (variable -> VARIABLE_INSTANCE .)
    SMALLER_THAN    reduce using rule 17 (variable -> VARIABLE_INSTANCE .)
    SMALLER_EQUAL   reduce using rule 17 (variable -> VARIABLE_INSTANCE .)
    $end            reduce using rule 17 (variable -> VARIABLE_INSTANCE .)
    R_PAREN         reduce using rule 17 (variable -> VARIABLE_INSTANCE .)
    PUTS            reduce using rule 17 (variable -> VARIABLE_INSTANCE .)
    VARIABLE_LOCAL  reduce using rule 17 (variable -> VARIABLE_INSTANCE .)
    VARIABLE_INSTANCE reduce using rule 17 (variable -> VARIABLE_INSTANCE .)
    VARIABLE_CLASS  reduce using rule 17 (variable -> VARIABLE_INSTANCE .)
    VARIABLE_GLOBAL reduce using rule 17 (variable -> VARIABLE_INSTANCE .)
    CONSTANT        reduce using rule 17 (variable -> VARIABLE_INSTANCE .)
    NUMBER          reduce using rule 17 (variable -> VARIABLE_INSTANCE .)
    L_PAREN         reduce using rule 17 (variable -> VARIABLE_INSTANCE .)
    IN              reduce using rule 17 (variable -> VARIABLE_INSTANCE .)
    END             reduce using rule 17 (variable -> VARIABLE_INSTANCE .)
    ELSE            reduce using rule 17 (variable -> VARIABLE_INSTANCE .)
    ELSIF           reduce using rule 17 (variable -> VARIABLE_INSTANCE .)


state 16

    (18) variable -> VARIABLE_CLASS .

    EQUAL           reduce using rule 18 (variable -> VARIABLE_CLASS .)
    PLUS            reduce using rule 18 (variable -> VARIABLE_CLASS .)
    MINUS           reduce using rule 18 (variable -> VARIABLE_CLASS .)
    MULTIPLICATION  reduce using rule 18 (variable -> VARIABLE_CLASS .)
    DIVIDE          reduce using rule 18 (variable -> VARIABLE_CLASS .)
    EXPONENT        reduce using rule 18 (variable -> VARIABLE_CLASS .)
    MODULE          reduce using rule 18 (variable -> VARIABLE_CLASS .)
    AND_LOGIC       reduce using rule 18 (variable -> VARIABLE_CLASS .)
    OR_LOGIC        reduce using rule 18 (variable -> VARIABLE_CLASS .)
    EQUALITY        reduce using rule 18 (variable -> VARIABLE_CLASS .)
    EQUALITY_OF_CASE reduce using rule 18 (variable -> VARIABLE_CLASS .)
    GREATER_EQUAL   reduce using rule 18 (variable -> VARIABLE_CLASS .)
    GREATER_THAN    reduce using rule 18 (variable -> VARIABLE_CLASS .)
    SMALLER_THAN    reduce using rule 18 (variable -> VARIABLE_CLASS .)
    SMALLER_EQUAL   reduce using rule 18 (variable -> VARIABLE_CLASS .)
    $end            reduce using rule 18 (variable -> VARIABLE_CLASS .)
    R_PAREN         reduce using rule 18 (variable -> VARIABLE_CLASS .)
    PUTS            reduce using rule 18 (variable -> VARIABLE_CLASS .)
    VARIABLE_LOCAL  reduce using rule 18 (variable -> VARIABLE_CLASS .)
    VARIABLE_INSTANCE reduce using rule 18 (variable -> VARIABLE_CLASS .)
    VARIABLE_CLASS  reduce using rule 18 (variable -> VARIABLE_CLASS .)
    VARIABLE_GLOBAL reduce using rule 18 (variable -> VARIABLE_CLASS .)
    CONSTANT        reduce using rule 18 (variable -> VARIABLE_CLASS .)
    NUMBER          reduce using rule 18 (variable -> VARIABLE_CLASS .)
    L_PAREN         reduce using rule 18 (variable -> VARIABLE_CLASS .)
    IN              reduce using rule 18 (variable -> VARIABLE_CLASS .)
    END             reduce using rule 18 (variable -> VARIABLE_CLASS .)
    ELSE            reduce using rule 18 (variable -> VARIABLE_CLASS .)
    ELSIF           reduce using rule 18 (variable -> VARIABLE_CLASS .)


state 17

    (19) variable -> VARIABLE_GLOBAL .

    EQUAL           reduce using rule 19 (variable -> VARIABLE_GLOBAL .)
    PLUS            reduce using rule 19 (variable -> VARIABLE_GLOBAL .)
    MINUS           reduce using rule 19 (variable -> VARIABLE_GLOBAL .)
    MULTIPLICATION  reduce using rule 19 (variable -> VARIABLE_GLOBAL .)
    DIVIDE          reduce using rule 19 (variable -> VARIABLE_GLOBAL .)
    EXPONENT        reduce using rule 19 (variable -> VARIABLE_GLOBAL .)
    MODULE          reduce using rule 19 (variable -> VARIABLE_GLOBAL .)
    AND_LOGIC       reduce using rule 19 (variable -> VARIABLE_GLOBAL .)
    OR_LOGIC        reduce using rule 19 (variable -> VARIABLE_GLOBAL .)
    EQUALITY        reduce using rule 19 (variable -> VARIABLE_GLOBAL .)
    EQUALITY_OF_CASE reduce using rule 19 (variable -> VARIABLE_GLOBAL .)
    GREATER_EQUAL   reduce using rule 19 (variable -> VARIABLE_GLOBAL .)
    GREATER_THAN    reduce using rule 19 (variable -> VARIABLE_GLOBAL .)
    SMALLER_THAN    reduce using rule 19 (variable -> VARIABLE_GLOBAL .)
    SMALLER_EQUAL   reduce using rule 19 (variable -> VARIABLE_GLOBAL .)
    $end            reduce using rule 19 (variable -> VARIABLE_GLOBAL .)
    R_PAREN         reduce using rule 19 (variable -> VARIABLE_GLOBAL .)
    PUTS            reduce using rule 19 (variable -> VARIABLE_GLOBAL .)
    VARIABLE_LOCAL  reduce using rule 19 (variable -> VARIABLE_GLOBAL .)
    VARIABLE_INSTANCE reduce using rule 19 (variable -> VARIABLE_GLOBAL .)
    VARIABLE_CLASS  reduce using rule 19 (variable -> VARIABLE_GLOBAL .)
    VARIABLE_GLOBAL reduce using rule 19 (variable -> VARIABLE_GLOBAL .)
    CONSTANT        reduce using rule 19 (variable -> VARIABLE_GLOBAL .)
    NUMBER          reduce using rule 19 (variable -> VARIABLE_GLOBAL .)
    L_PAREN         reduce using rule 19 (variable -> VARIABLE_GLOBAL .)
    IN              reduce using rule 19 (variable -> VARIABLE_GLOBAL .)
    END             reduce using rule 19 (variable -> VARIABLE_GLOBAL .)
    ELSE            reduce using rule 19 (variable -> VARIABLE_GLOBAL .)
    ELSIF           reduce using rule 19 (variable -> VARIABLE_GLOBAL .)


state 18

    (20) variable -> CONSTANT .

    EQUAL           reduce using rule 20 (variable -> CONSTANT .)
    PLUS            reduce using rule 20 (variable -> CONSTANT .)
    MINUS           reduce using rule 20 (variable -> CONSTANT .)
    MULTIPLICATION  reduce using rule 20 (variable -> CONSTANT .)
    DIVIDE          reduce using rule 20 (variable -> CONSTANT .)
    EXPONENT        reduce using rule 20 (variable -> CONSTANT .)
    MODULE          reduce using rule 20 (variable -> CONSTANT .)
    AND_LOGIC       reduce using rule 20 (variable -> CONSTANT .)
    OR_LOGIC        reduce using rule 20 (variable -> CONSTANT .)
    EQUALITY        reduce using rule 20 (variable -> CONSTANT .)
    EQUALITY_OF_CASE reduce using rule 20 (variable -> CONSTANT .)
    GREATER_EQUAL   reduce using rule 20 (variable -> CONSTANT .)
    GREATER_THAN    reduce using rule 20 (variable -> CONSTANT .)
    SMALLER_THAN    reduce using rule 20 (variable -> CONSTANT .)
    SMALLER_EQUAL   reduce using rule 20 (variable -> CONSTANT .)
    $end            reduce using rule 20 (variable -> CONSTANT .)
    R_PAREN         reduce using rule 20 (variable -> CONSTANT .)
    PUTS            reduce using rule 20 (variable -> CONSTANT .)
    VARIABLE_LOCAL  reduce using rule 20 (variable -> CONSTANT .)
    VARIABLE_INSTANCE reduce using rule 20 (variable -> CONSTANT .)
    VARIABLE_CLASS  reduce using rule 20 (variable -> CONSTANT .)
    VARIABLE_GLOBAL reduce using rule 20 (variable -> CONSTANT .)
    CONSTANT        reduce using rule 20 (variable -> CONSTANT .)
    NUMBER          reduce using rule 20 (variable -> CONSTANT .)
    L_PAREN         reduce using rule 20 (variable -> CONSTANT .)
    IN              reduce using rule 20 (variable -> CONSTANT .)
    END             reduce using rule 20 (variable -> CONSTANT .)
    ELSE            reduce using rule 20 (variable -> CONSTANT .)
    ELSIF           reduce using rule 20 (variable -> CONSTANT .)


state 19

    (36) term -> NUMBER .

    PLUS            reduce using rule 36 (term -> NUMBER .)
    MINUS           reduce using rule 36 (term -> NUMBER .)
    MULTIPLICATION  reduce using rule 36 (term -> NUMBER .)
    DIVIDE          reduce using rule 36 (term -> NUMBER .)
    EXPONENT        reduce using rule 36 (term -> NUMBER .)
    MODULE          reduce using rule 36 (term -> NUMBER .)
    AND_LOGIC       reduce using rule 36 (term -> NUMBER .)
    OR_LOGIC        reduce using rule 36 (term -> NUMBER .)
    EQUALITY        reduce using rule 36 (term -> NUMBER .)
    EQUALITY_OF_CASE reduce using rule 36 (term -> NUMBER .)
    GREATER_EQUAL   reduce using rule 36 (term -> NUMBER .)
    GREATER_THAN    reduce using rule 36 (term -> NUMBER .)
    SMALLER_THAN    reduce using rule 36 (term -> NUMBER .)
    SMALLER_EQUAL   reduce using rule 36 (term -> NUMBER .)
    $end            reduce using rule 36 (term -> NUMBER .)
    R_PAREN         reduce using rule 36 (term -> NUMBER .)
    PUTS            reduce using rule 36 (term -> NUMBER .)
    VARIABLE_LOCAL  reduce using rule 36 (term -> NUMBER .)
    VARIABLE_INSTANCE reduce using rule 36 (term -> NUMBER .)
    VARIABLE_CLASS  reduce using rule 36 (term -> NUMBER .)
    VARIABLE_GLOBAL reduce using rule 36 (term -> NUMBER .)
    CONSTANT        reduce using rule 36 (term -> NUMBER .)
    NUMBER          reduce using rule 36 (term -> NUMBER .)
    L_PAREN         reduce using rule 36 (term -> NUMBER .)
    END             reduce using rule 36 (term -> NUMBER .)
    ELSE            reduce using rule 36 (term -> NUMBER .)
    ELSIF           reduce using rule 36 (term -> NUMBER .)


state 20

    (45) estructuraCondicional -> estructuraif . END
    (46) estructuraCondicional -> estructuraif . estructuraelse END
    (47) estructuraCondicional -> estructuraif . estructuraelseif END
    (50) estructuraelse -> . ELSE cuerpo
    (49) estructuraelseif -> . ELSIF expresion cuerpo

    END             shift and go to state 46
    ELSE            shift and go to state 49
    ELSIF           shift and go to state 50

    estructuraelse                 shift and go to state 47
    estructuraelseif               shift and go to state 48

state 21

    (51) estructuraIterativa -> sentenciafor . END

    END             shift and go to state 51


state 22

    (52) estructuraIterativa -> sentenciawhile . END

    END             shift and go to state 52


state 23

    (48) estructuraif -> IF . expresion cuerpo
    (21) expresion -> . expresion PLUS term
    (22) expresion -> . expresion MINUS term
    (23) expresion -> . expresion MULTIPLICATION term
    (24) expresion -> . expresion DIVIDE term
    (25) expresion -> . expresion EXPONENT term
    (26) expresion -> . expresion MODULE term
    (27) expresion -> . expresion AND_LOGIC term
    (28) expresion -> . expresion OR_LOGIC term
    (29) expresion -> . expresion EQUALITY term
    (30) expresion -> . expresion EQUALITY_OF_CASE term
    (31) expresion -> . expresion GREATER_EQUAL term
    (32) expresion -> . expresion GREATER_THAN term
    (33) expresion -> . expresion SMALLER_THAN term
    (34) expresion -> . expresion SMALLER_EQUAL term
    (35) expresion -> . term
    (36) term -> . NUMBER
    (37) term -> . variable
    (38) term -> . L_PAREN expresion R_PAREN
    (16) variable -> . VARIABLE_LOCAL
    (17) variable -> . VARIABLE_INSTANCE
    (18) variable -> . VARIABLE_CLASS
    (19) variable -> . VARIABLE_GLOBAL
    (20) variable -> . CONSTANT

    NUMBER          shift and go to state 19
    L_PAREN         shift and go to state 9
    VARIABLE_LOCAL  shift and go to state 8
    VARIABLE_INSTANCE shift and go to state 15
    VARIABLE_CLASS  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 17
    CONSTANT        shift and go to state 18

    expresion                      shift and go to state 53
    term                           shift and go to state 11
    variable                       shift and go to state 42

state 24

    (53) sentenciafor -> FOR . variable IN L_PAREN NUMBER DOUBLE_POINT NUMBER R_PAREN cuerpo
    (16) variable -> . VARIABLE_LOCAL
    (17) variable -> . VARIABLE_INSTANCE
    (18) variable -> . VARIABLE_CLASS
    (19) variable -> . VARIABLE_GLOBAL
    (20) variable -> . CONSTANT

    VARIABLE_LOCAL  shift and go to state 8
    VARIABLE_INSTANCE shift and go to state 15
    VARIABLE_CLASS  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 17
    CONSTANT        shift and go to state 18

    variable                       shift and go to state 54

state 25

    (54) sentenciawhile -> WHILE . expresion cuerpo
    (21) expresion -> . expresion PLUS term
    (22) expresion -> . expresion MINUS term
    (23) expresion -> . expresion MULTIPLICATION term
    (24) expresion -> . expresion DIVIDE term
    (25) expresion -> . expresion EXPONENT term
    (26) expresion -> . expresion MODULE term
    (27) expresion -> . expresion AND_LOGIC term
    (28) expresion -> . expresion OR_LOGIC term
    (29) expresion -> . expresion EQUALITY term
    (30) expresion -> . expresion EQUALITY_OF_CASE term
    (31) expresion -> . expresion GREATER_EQUAL term
    (32) expresion -> . expresion GREATER_THAN term
    (33) expresion -> . expresion SMALLER_THAN term
    (34) expresion -> . expresion SMALLER_EQUAL term
    (35) expresion -> . term
    (36) term -> . NUMBER
    (37) term -> . variable
    (38) term -> . L_PAREN expresion R_PAREN
    (16) variable -> . VARIABLE_LOCAL
    (17) variable -> . VARIABLE_INSTANCE
    (18) variable -> . VARIABLE_CLASS
    (19) variable -> . VARIABLE_GLOBAL
    (20) variable -> . CONSTANT

    NUMBER          shift and go to state 19
    L_PAREN         shift and go to state 9
    VARIABLE_LOCAL  shift and go to state 8
    VARIABLE_INSTANCE shift and go to state 15
    VARIABLE_CLASS  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 17
    CONSTANT        shift and go to state 18

    expresion                      shift and go to state 55
    term                           shift and go to state 11
    variable                       shift and go to state 42

state 26

    (21) expresion -> expresion PLUS . term
    (36) term -> . NUMBER
    (37) term -> . variable
    (38) term -> . L_PAREN expresion R_PAREN
    (16) variable -> . VARIABLE_LOCAL
    (17) variable -> . VARIABLE_INSTANCE
    (18) variable -> . VARIABLE_CLASS
    (19) variable -> . VARIABLE_GLOBAL
    (20) variable -> . CONSTANT

    NUMBER          shift and go to state 19
    L_PAREN         shift and go to state 9
    VARIABLE_LOCAL  shift and go to state 8
    VARIABLE_INSTANCE shift and go to state 15
    VARIABLE_CLASS  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 17
    CONSTANT        shift and go to state 18

    term                           shift and go to state 56
    variable                       shift and go to state 42

state 27

    (22) expresion -> expresion MINUS . term
    (36) term -> . NUMBER
    (37) term -> . variable
    (38) term -> . L_PAREN expresion R_PAREN
    (16) variable -> . VARIABLE_LOCAL
    (17) variable -> . VARIABLE_INSTANCE
    (18) variable -> . VARIABLE_CLASS
    (19) variable -> . VARIABLE_GLOBAL
    (20) variable -> . CONSTANT

    NUMBER          shift and go to state 19
    L_PAREN         shift and go to state 9
    VARIABLE_LOCAL  shift and go to state 8
    VARIABLE_INSTANCE shift and go to state 15
    VARIABLE_CLASS  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 17
    CONSTANT        shift and go to state 18

    term                           shift and go to state 57
    variable                       shift and go to state 42

state 28

    (23) expresion -> expresion MULTIPLICATION . term
    (36) term -> . NUMBER
    (37) term -> . variable
    (38) term -> . L_PAREN expresion R_PAREN
    (16) variable -> . VARIABLE_LOCAL
    (17) variable -> . VARIABLE_INSTANCE
    (18) variable -> . VARIABLE_CLASS
    (19) variable -> . VARIABLE_GLOBAL
    (20) variable -> . CONSTANT

    NUMBER          shift and go to state 19
    L_PAREN         shift and go to state 9
    VARIABLE_LOCAL  shift and go to state 8
    VARIABLE_INSTANCE shift and go to state 15
    VARIABLE_CLASS  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 17
    CONSTANT        shift and go to state 18

    term                           shift and go to state 58
    variable                       shift and go to state 42

state 29

    (24) expresion -> expresion DIVIDE . term
    (36) term -> . NUMBER
    (37) term -> . variable
    (38) term -> . L_PAREN expresion R_PAREN
    (16) variable -> . VARIABLE_LOCAL
    (17) variable -> . VARIABLE_INSTANCE
    (18) variable -> . VARIABLE_CLASS
    (19) variable -> . VARIABLE_GLOBAL
    (20) variable -> . CONSTANT

    NUMBER          shift and go to state 19
    L_PAREN         shift and go to state 9
    VARIABLE_LOCAL  shift and go to state 8
    VARIABLE_INSTANCE shift and go to state 15
    VARIABLE_CLASS  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 17
    CONSTANT        shift and go to state 18

    term                           shift and go to state 59
    variable                       shift and go to state 42

state 30

    (25) expresion -> expresion EXPONENT . term
    (36) term -> . NUMBER
    (37) term -> . variable
    (38) term -> . L_PAREN expresion R_PAREN
    (16) variable -> . VARIABLE_LOCAL
    (17) variable -> . VARIABLE_INSTANCE
    (18) variable -> . VARIABLE_CLASS
    (19) variable -> . VARIABLE_GLOBAL
    (20) variable -> . CONSTANT

    NUMBER          shift and go to state 19
    L_PAREN         shift and go to state 9
    VARIABLE_LOCAL  shift and go to state 8
    VARIABLE_INSTANCE shift and go to state 15
    VARIABLE_CLASS  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 17
    CONSTANT        shift and go to state 18

    term                           shift and go to state 60
    variable                       shift and go to state 42

state 31

    (26) expresion -> expresion MODULE . term
    (36) term -> . NUMBER
    (37) term -> . variable
    (38) term -> . L_PAREN expresion R_PAREN
    (16) variable -> . VARIABLE_LOCAL
    (17) variable -> . VARIABLE_INSTANCE
    (18) variable -> . VARIABLE_CLASS
    (19) variable -> . VARIABLE_GLOBAL
    (20) variable -> . CONSTANT

    NUMBER          shift and go to state 19
    L_PAREN         shift and go to state 9
    VARIABLE_LOCAL  shift and go to state 8
    VARIABLE_INSTANCE shift and go to state 15
    VARIABLE_CLASS  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 17
    CONSTANT        shift and go to state 18

    term                           shift and go to state 61
    variable                       shift and go to state 42

state 32

    (27) expresion -> expresion AND_LOGIC . term
    (36) term -> . NUMBER
    (37) term -> . variable
    (38) term -> . L_PAREN expresion R_PAREN
    (16) variable -> . VARIABLE_LOCAL
    (17) variable -> . VARIABLE_INSTANCE
    (18) variable -> . VARIABLE_CLASS
    (19) variable -> . VARIABLE_GLOBAL
    (20) variable -> . CONSTANT

    NUMBER          shift and go to state 19
    L_PAREN         shift and go to state 9
    VARIABLE_LOCAL  shift and go to state 8
    VARIABLE_INSTANCE shift and go to state 15
    VARIABLE_CLASS  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 17
    CONSTANT        shift and go to state 18

    term                           shift and go to state 62
    variable                       shift and go to state 42

state 33

    (28) expresion -> expresion OR_LOGIC . term
    (36) term -> . NUMBER
    (37) term -> . variable
    (38) term -> . L_PAREN expresion R_PAREN
    (16) variable -> . VARIABLE_LOCAL
    (17) variable -> . VARIABLE_INSTANCE
    (18) variable -> . VARIABLE_CLASS
    (19) variable -> . VARIABLE_GLOBAL
    (20) variable -> . CONSTANT

    NUMBER          shift and go to state 19
    L_PAREN         shift and go to state 9
    VARIABLE_LOCAL  shift and go to state 8
    VARIABLE_INSTANCE shift and go to state 15
    VARIABLE_CLASS  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 17
    CONSTANT        shift and go to state 18

    term                           shift and go to state 63
    variable                       shift and go to state 42

state 34

    (29) expresion -> expresion EQUALITY . term
    (36) term -> . NUMBER
    (37) term -> . variable
    (38) term -> . L_PAREN expresion R_PAREN
    (16) variable -> . VARIABLE_LOCAL
    (17) variable -> . VARIABLE_INSTANCE
    (18) variable -> . VARIABLE_CLASS
    (19) variable -> . VARIABLE_GLOBAL
    (20) variable -> . CONSTANT

    NUMBER          shift and go to state 19
    L_PAREN         shift and go to state 9
    VARIABLE_LOCAL  shift and go to state 8
    VARIABLE_INSTANCE shift and go to state 15
    VARIABLE_CLASS  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 17
    CONSTANT        shift and go to state 18

    term                           shift and go to state 64
    variable                       shift and go to state 42

state 35

    (30) expresion -> expresion EQUALITY_OF_CASE . term
    (36) term -> . NUMBER
    (37) term -> . variable
    (38) term -> . L_PAREN expresion R_PAREN
    (16) variable -> . VARIABLE_LOCAL
    (17) variable -> . VARIABLE_INSTANCE
    (18) variable -> . VARIABLE_CLASS
    (19) variable -> . VARIABLE_GLOBAL
    (20) variable -> . CONSTANT

    NUMBER          shift and go to state 19
    L_PAREN         shift and go to state 9
    VARIABLE_LOCAL  shift and go to state 8
    VARIABLE_INSTANCE shift and go to state 15
    VARIABLE_CLASS  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 17
    CONSTANT        shift and go to state 18

    term                           shift and go to state 65
    variable                       shift and go to state 42

state 36

    (31) expresion -> expresion GREATER_EQUAL . term
    (36) term -> . NUMBER
    (37) term -> . variable
    (38) term -> . L_PAREN expresion R_PAREN
    (16) variable -> . VARIABLE_LOCAL
    (17) variable -> . VARIABLE_INSTANCE
    (18) variable -> . VARIABLE_CLASS
    (19) variable -> . VARIABLE_GLOBAL
    (20) variable -> . CONSTANT

    NUMBER          shift and go to state 19
    L_PAREN         shift and go to state 9
    VARIABLE_LOCAL  shift and go to state 8
    VARIABLE_INSTANCE shift and go to state 15
    VARIABLE_CLASS  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 17
    CONSTANT        shift and go to state 18

    term                           shift and go to state 66
    variable                       shift and go to state 42

state 37

    (32) expresion -> expresion GREATER_THAN . term
    (36) term -> . NUMBER
    (37) term -> . variable
    (38) term -> . L_PAREN expresion R_PAREN
    (16) variable -> . VARIABLE_LOCAL
    (17) variable -> . VARIABLE_INSTANCE
    (18) variable -> . VARIABLE_CLASS
    (19) variable -> . VARIABLE_GLOBAL
    (20) variable -> . CONSTANT

    NUMBER          shift and go to state 19
    L_PAREN         shift and go to state 9
    VARIABLE_LOCAL  shift and go to state 8
    VARIABLE_INSTANCE shift and go to state 15
    VARIABLE_CLASS  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 17
    CONSTANT        shift and go to state 18

    term                           shift and go to state 67
    variable                       shift and go to state 42

state 38

    (33) expresion -> expresion SMALLER_THAN . term
    (36) term -> . NUMBER
    (37) term -> . variable
    (38) term -> . L_PAREN expresion R_PAREN
    (16) variable -> . VARIABLE_LOCAL
    (17) variable -> . VARIABLE_INSTANCE
    (18) variable -> . VARIABLE_CLASS
    (19) variable -> . VARIABLE_GLOBAL
    (20) variable -> . CONSTANT

    NUMBER          shift and go to state 19
    L_PAREN         shift and go to state 9
    VARIABLE_LOCAL  shift and go to state 8
    VARIABLE_INSTANCE shift and go to state 15
    VARIABLE_CLASS  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 17
    CONSTANT        shift and go to state 18

    term                           shift and go to state 68
    variable                       shift and go to state 42

state 39

    (34) expresion -> expresion SMALLER_EQUAL . term
    (36) term -> . NUMBER
    (37) term -> . variable
    (38) term -> . L_PAREN expresion R_PAREN
    (16) variable -> . VARIABLE_LOCAL
    (17) variable -> . VARIABLE_INSTANCE
    (18) variable -> . VARIABLE_CLASS
    (19) variable -> . VARIABLE_GLOBAL
    (20) variable -> . CONSTANT

    NUMBER          shift and go to state 19
    L_PAREN         shift and go to state 9
    VARIABLE_LOCAL  shift and go to state 8
    VARIABLE_INSTANCE shift and go to state 15
    VARIABLE_CLASS  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 17
    CONSTANT        shift and go to state 18

    term                           shift and go to state 69
    variable                       shift and go to state 42

state 40

    (6) funcion -> DEF VARIABLE_LOCAL . L_PAREN parametros R_PAREN cuerpo END

    L_PAREN         shift and go to state 70


state 41

    (38) term -> L_PAREN expresion . R_PAREN
    (21) expresion -> expresion . PLUS term
    (22) expresion -> expresion . MINUS term
    (23) expresion -> expresion . MULTIPLICATION term
    (24) expresion -> expresion . DIVIDE term
    (25) expresion -> expresion . EXPONENT term
    (26) expresion -> expresion . MODULE term
    (27) expresion -> expresion . AND_LOGIC term
    (28) expresion -> expresion . OR_LOGIC term
    (29) expresion -> expresion . EQUALITY term
    (30) expresion -> expresion . EQUALITY_OF_CASE term
    (31) expresion -> expresion . GREATER_EQUAL term
    (32) expresion -> expresion . GREATER_THAN term
    (33) expresion -> expresion . SMALLER_THAN term
    (34) expresion -> expresion . SMALLER_EQUAL term

    R_PAREN         shift and go to state 71
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    MULTIPLICATION  shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    MODULE          shift and go to state 31
    AND_LOGIC       shift and go to state 32
    OR_LOGIC        shift and go to state 33
    EQUALITY        shift and go to state 34
    EQUALITY_OF_CASE shift and go to state 35
    GREATER_EQUAL   shift and go to state 36
    GREATER_THAN    shift and go to state 37
    SMALLER_THAN    shift and go to state 38
    SMALLER_EQUAL   shift and go to state 39


state 42

    (37) term -> variable .

    R_PAREN         reduce using rule 37 (term -> variable .)
    PLUS            reduce using rule 37 (term -> variable .)
    MINUS           reduce using rule 37 (term -> variable .)
    MULTIPLICATION  reduce using rule 37 (term -> variable .)
    DIVIDE          reduce using rule 37 (term -> variable .)
    EXPONENT        reduce using rule 37 (term -> variable .)
    MODULE          reduce using rule 37 (term -> variable .)
    AND_LOGIC       reduce using rule 37 (term -> variable .)
    OR_LOGIC        reduce using rule 37 (term -> variable .)
    EQUALITY        reduce using rule 37 (term -> variable .)
    EQUALITY_OF_CASE reduce using rule 37 (term -> variable .)
    GREATER_EQUAL   reduce using rule 37 (term -> variable .)
    GREATER_THAN    reduce using rule 37 (term -> variable .)
    SMALLER_THAN    reduce using rule 37 (term -> variable .)
    SMALLER_EQUAL   reduce using rule 37 (term -> variable .)
    PUTS            reduce using rule 37 (term -> variable .)
    VARIABLE_LOCAL  reduce using rule 37 (term -> variable .)
    VARIABLE_INSTANCE reduce using rule 37 (term -> variable .)
    VARIABLE_CLASS  reduce using rule 37 (term -> variable .)
    VARIABLE_GLOBAL reduce using rule 37 (term -> variable .)
    CONSTANT        reduce using rule 37 (term -> variable .)
    NUMBER          reduce using rule 37 (term -> variable .)
    L_PAREN         reduce using rule 37 (term -> variable .)
    $end            reduce using rule 37 (term -> variable .)
    END             reduce using rule 37 (term -> variable .)
    ELSE            reduce using rule 37 (term -> variable .)
    ELSIF           reduce using rule 37 (term -> variable .)


state 43

    (15) declaracion -> variable EQUAL . expresion
    (21) expresion -> . expresion PLUS term
    (22) expresion -> . expresion MINUS term
    (23) expresion -> . expresion MULTIPLICATION term
    (24) expresion -> . expresion DIVIDE term
    (25) expresion -> . expresion EXPONENT term
    (26) expresion -> . expresion MODULE term
    (27) expresion -> . expresion AND_LOGIC term
    (28) expresion -> . expresion OR_LOGIC term
    (29) expresion -> . expresion EQUALITY term
    (30) expresion -> . expresion EQUALITY_OF_CASE term
    (31) expresion -> . expresion GREATER_EQUAL term
    (32) expresion -> . expresion GREATER_THAN term
    (33) expresion -> . expresion SMALLER_THAN term
    (34) expresion -> . expresion SMALLER_EQUAL term
    (35) expresion -> . term
    (36) term -> . NUMBER
    (37) term -> . variable
    (38) term -> . L_PAREN expresion R_PAREN
    (16) variable -> . VARIABLE_LOCAL
    (17) variable -> . VARIABLE_INSTANCE
    (18) variable -> . VARIABLE_CLASS
    (19) variable -> . VARIABLE_GLOBAL
    (20) variable -> . CONSTANT

    NUMBER          shift and go to state 19
    L_PAREN         shift and go to state 9
    VARIABLE_LOCAL  shift and go to state 8
    VARIABLE_INSTANCE shift and go to state 15
    VARIABLE_CLASS  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 17
    CONSTANT        shift and go to state 18

    variable                       shift and go to state 42
    expresion                      shift and go to state 72
    term                           shift and go to state 11

state 44

    (39) print -> PUTS L_PAREN . expresion R_PAREN
    (40) print -> PUTS L_PAREN . variable R_PAREN
    (41) print -> PUTS L_PAREN . R_PAREN
    (21) expresion -> . expresion PLUS term
    (22) expresion -> . expresion MINUS term
    (23) expresion -> . expresion MULTIPLICATION term
    (24) expresion -> . expresion DIVIDE term
    (25) expresion -> . expresion EXPONENT term
    (26) expresion -> . expresion MODULE term
    (27) expresion -> . expresion AND_LOGIC term
    (28) expresion -> . expresion OR_LOGIC term
    (29) expresion -> . expresion EQUALITY term
    (30) expresion -> . expresion EQUALITY_OF_CASE term
    (31) expresion -> . expresion GREATER_EQUAL term
    (32) expresion -> . expresion GREATER_THAN term
    (33) expresion -> . expresion SMALLER_THAN term
    (34) expresion -> . expresion SMALLER_EQUAL term
    (35) expresion -> . term
    (16) variable -> . VARIABLE_LOCAL
    (17) variable -> . VARIABLE_INSTANCE
    (18) variable -> . VARIABLE_CLASS
    (19) variable -> . VARIABLE_GLOBAL
    (20) variable -> . CONSTANT
    (36) term -> . NUMBER
    (37) term -> . variable
    (38) term -> . L_PAREN expresion R_PAREN

    R_PAREN         shift and go to state 74
    VARIABLE_LOCAL  shift and go to state 8
    VARIABLE_INSTANCE shift and go to state 15
    VARIABLE_CLASS  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 17
    CONSTANT        shift and go to state 18
    NUMBER          shift and go to state 19
    L_PAREN         shift and go to state 9

    expresion                      shift and go to state 73
    variable                       shift and go to state 75
    term                           shift and go to state 11

state 45

    (42) print -> PUTS STRING .

    $end            reduce using rule 42 (print -> PUTS STRING .)
    PUTS            reduce using rule 42 (print -> PUTS STRING .)
    VARIABLE_LOCAL  reduce using rule 42 (print -> PUTS STRING .)
    VARIABLE_INSTANCE reduce using rule 42 (print -> PUTS STRING .)
    VARIABLE_CLASS  reduce using rule 42 (print -> PUTS STRING .)
    VARIABLE_GLOBAL reduce using rule 42 (print -> PUTS STRING .)
    CONSTANT        reduce using rule 42 (print -> PUTS STRING .)
    NUMBER          reduce using rule 42 (print -> PUTS STRING .)
    L_PAREN         reduce using rule 42 (print -> PUTS STRING .)
    END             reduce using rule 42 (print -> PUTS STRING .)
    ELSE            reduce using rule 42 (print -> PUTS STRING .)
    ELSIF           reduce using rule 42 (print -> PUTS STRING .)


state 46

    (45) estructuraCondicional -> estructuraif END .

    $end            reduce using rule 45 (estructuraCondicional -> estructuraif END .)


state 47

    (46) estructuraCondicional -> estructuraif estructuraelse . END

    END             shift and go to state 76


state 48

    (47) estructuraCondicional -> estructuraif estructuraelseif . END

    END             shift and go to state 77


state 49

    (50) estructuraelse -> ELSE . cuerpo
    (9) cuerpo -> . declaracion
    (10) cuerpo -> . declaracion cuerpo
    (11) cuerpo -> . print
    (12) cuerpo -> . print cuerpo
    (13) cuerpo -> . expresion
    (14) cuerpo -> . expresion cuerpo
    (15) declaracion -> . variable EQUAL expresion
    (39) print -> . PUTS L_PAREN expresion R_PAREN
    (40) print -> . PUTS L_PAREN variable R_PAREN
    (41) print -> . PUTS L_PAREN R_PAREN
    (42) print -> . PUTS STRING
    (21) expresion -> . expresion PLUS term
    (22) expresion -> . expresion MINUS term
    (23) expresion -> . expresion MULTIPLICATION term
    (24) expresion -> . expresion DIVIDE term
    (25) expresion -> . expresion EXPONENT term
    (26) expresion -> . expresion MODULE term
    (27) expresion -> . expresion AND_LOGIC term
    (28) expresion -> . expresion OR_LOGIC term
    (29) expresion -> . expresion EQUALITY term
    (30) expresion -> . expresion EQUALITY_OF_CASE term
    (31) expresion -> . expresion GREATER_EQUAL term
    (32) expresion -> . expresion GREATER_THAN term
    (33) expresion -> . expresion SMALLER_THAN term
    (34) expresion -> . expresion SMALLER_EQUAL term
    (35) expresion -> . term
    (16) variable -> . VARIABLE_LOCAL
    (17) variable -> . VARIABLE_INSTANCE
    (18) variable -> . VARIABLE_CLASS
    (19) variable -> . VARIABLE_GLOBAL
    (20) variable -> . CONSTANT
    (36) term -> . NUMBER
    (37) term -> . variable
    (38) term -> . L_PAREN expresion R_PAREN

    PUTS            shift and go to state 14
    VARIABLE_LOCAL  shift and go to state 8
    VARIABLE_INSTANCE shift and go to state 15
    VARIABLE_CLASS  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 17
    CONSTANT        shift and go to state 18
    NUMBER          shift and go to state 19
    L_PAREN         shift and go to state 9

    cuerpo                         shift and go to state 78
    declaracion                    shift and go to state 79
    print                          shift and go to state 80
    expresion                      shift and go to state 81
    variable                       shift and go to state 10
    term                           shift and go to state 11

state 50

    (49) estructuraelseif -> ELSIF . expresion cuerpo
    (21) expresion -> . expresion PLUS term
    (22) expresion -> . expresion MINUS term
    (23) expresion -> . expresion MULTIPLICATION term
    (24) expresion -> . expresion DIVIDE term
    (25) expresion -> . expresion EXPONENT term
    (26) expresion -> . expresion MODULE term
    (27) expresion -> . expresion AND_LOGIC term
    (28) expresion -> . expresion OR_LOGIC term
    (29) expresion -> . expresion EQUALITY term
    (30) expresion -> . expresion EQUALITY_OF_CASE term
    (31) expresion -> . expresion GREATER_EQUAL term
    (32) expresion -> . expresion GREATER_THAN term
    (33) expresion -> . expresion SMALLER_THAN term
    (34) expresion -> . expresion SMALLER_EQUAL term
    (35) expresion -> . term
    (36) term -> . NUMBER
    (37) term -> . variable
    (38) term -> . L_PAREN expresion R_PAREN
    (16) variable -> . VARIABLE_LOCAL
    (17) variable -> . VARIABLE_INSTANCE
    (18) variable -> . VARIABLE_CLASS
    (19) variable -> . VARIABLE_GLOBAL
    (20) variable -> . CONSTANT

    NUMBER          shift and go to state 19
    L_PAREN         shift and go to state 9
    VARIABLE_LOCAL  shift and go to state 8
    VARIABLE_INSTANCE shift and go to state 15
    VARIABLE_CLASS  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 17
    CONSTANT        shift and go to state 18

    expresion                      shift and go to state 82
    term                           shift and go to state 11
    variable                       shift and go to state 42

state 51

    (51) estructuraIterativa -> sentenciafor END .

    $end            reduce using rule 51 (estructuraIterativa -> sentenciafor END .)


state 52

    (52) estructuraIterativa -> sentenciawhile END .

    $end            reduce using rule 52 (estructuraIterativa -> sentenciawhile END .)


state 53

    (48) estructuraif -> IF expresion . cuerpo
    (21) expresion -> expresion . PLUS term
    (22) expresion -> expresion . MINUS term
    (23) expresion -> expresion . MULTIPLICATION term
    (24) expresion -> expresion . DIVIDE term
    (25) expresion -> expresion . EXPONENT term
    (26) expresion -> expresion . MODULE term
    (27) expresion -> expresion . AND_LOGIC term
    (28) expresion -> expresion . OR_LOGIC term
    (29) expresion -> expresion . EQUALITY term
    (30) expresion -> expresion . EQUALITY_OF_CASE term
    (31) expresion -> expresion . GREATER_EQUAL term
    (32) expresion -> expresion . GREATER_THAN term
    (33) expresion -> expresion . SMALLER_THAN term
    (34) expresion -> expresion . SMALLER_EQUAL term
    (9) cuerpo -> . declaracion
    (10) cuerpo -> . declaracion cuerpo
    (11) cuerpo -> . print
    (12) cuerpo -> . print cuerpo
    (13) cuerpo -> . expresion
    (14) cuerpo -> . expresion cuerpo
    (15) declaracion -> . variable EQUAL expresion
    (39) print -> . PUTS L_PAREN expresion R_PAREN
    (40) print -> . PUTS L_PAREN variable R_PAREN
    (41) print -> . PUTS L_PAREN R_PAREN
    (42) print -> . PUTS STRING
    (21) expresion -> . expresion PLUS term
    (22) expresion -> . expresion MINUS term
    (23) expresion -> . expresion MULTIPLICATION term
    (24) expresion -> . expresion DIVIDE term
    (25) expresion -> . expresion EXPONENT term
    (26) expresion -> . expresion MODULE term
    (27) expresion -> . expresion AND_LOGIC term
    (28) expresion -> . expresion OR_LOGIC term
    (29) expresion -> . expresion EQUALITY term
    (30) expresion -> . expresion EQUALITY_OF_CASE term
    (31) expresion -> . expresion GREATER_EQUAL term
    (32) expresion -> . expresion GREATER_THAN term
    (33) expresion -> . expresion SMALLER_THAN term
    (34) expresion -> . expresion SMALLER_EQUAL term
    (35) expresion -> . term
    (16) variable -> . VARIABLE_LOCAL
    (17) variable -> . VARIABLE_INSTANCE
    (18) variable -> . VARIABLE_CLASS
    (19) variable -> . VARIABLE_GLOBAL
    (20) variable -> . CONSTANT
    (36) term -> . NUMBER
    (37) term -> . variable
    (38) term -> . L_PAREN expresion R_PAREN

    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    MULTIPLICATION  shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    MODULE          shift and go to state 31
    AND_LOGIC       shift and go to state 32
    OR_LOGIC        shift and go to state 33
    EQUALITY        shift and go to state 34
    EQUALITY_OF_CASE shift and go to state 35
    GREATER_EQUAL   shift and go to state 36
    GREATER_THAN    shift and go to state 37
    SMALLER_THAN    shift and go to state 38
    SMALLER_EQUAL   shift and go to state 39
    PUTS            shift and go to state 14
    VARIABLE_LOCAL  shift and go to state 8
    VARIABLE_INSTANCE shift and go to state 15
    VARIABLE_CLASS  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 17
    CONSTANT        shift and go to state 18
    NUMBER          shift and go to state 19
    L_PAREN         shift and go to state 9

    expresion                      shift and go to state 81
    cuerpo                         shift and go to state 83
    term                           shift and go to state 11
    declaracion                    shift and go to state 79
    print                          shift and go to state 80
    variable                       shift and go to state 10

state 54

    (53) sentenciafor -> FOR variable . IN L_PAREN NUMBER DOUBLE_POINT NUMBER R_PAREN cuerpo

    IN              shift and go to state 84


state 55

    (54) sentenciawhile -> WHILE expresion . cuerpo
    (21) expresion -> expresion . PLUS term
    (22) expresion -> expresion . MINUS term
    (23) expresion -> expresion . MULTIPLICATION term
    (24) expresion -> expresion . DIVIDE term
    (25) expresion -> expresion . EXPONENT term
    (26) expresion -> expresion . MODULE term
    (27) expresion -> expresion . AND_LOGIC term
    (28) expresion -> expresion . OR_LOGIC term
    (29) expresion -> expresion . EQUALITY term
    (30) expresion -> expresion . EQUALITY_OF_CASE term
    (31) expresion -> expresion . GREATER_EQUAL term
    (32) expresion -> expresion . GREATER_THAN term
    (33) expresion -> expresion . SMALLER_THAN term
    (34) expresion -> expresion . SMALLER_EQUAL term
    (9) cuerpo -> . declaracion
    (10) cuerpo -> . declaracion cuerpo
    (11) cuerpo -> . print
    (12) cuerpo -> . print cuerpo
    (13) cuerpo -> . expresion
    (14) cuerpo -> . expresion cuerpo
    (15) declaracion -> . variable EQUAL expresion
    (39) print -> . PUTS L_PAREN expresion R_PAREN
    (40) print -> . PUTS L_PAREN variable R_PAREN
    (41) print -> . PUTS L_PAREN R_PAREN
    (42) print -> . PUTS STRING
    (21) expresion -> . expresion PLUS term
    (22) expresion -> . expresion MINUS term
    (23) expresion -> . expresion MULTIPLICATION term
    (24) expresion -> . expresion DIVIDE term
    (25) expresion -> . expresion EXPONENT term
    (26) expresion -> . expresion MODULE term
    (27) expresion -> . expresion AND_LOGIC term
    (28) expresion -> . expresion OR_LOGIC term
    (29) expresion -> . expresion EQUALITY term
    (30) expresion -> . expresion EQUALITY_OF_CASE term
    (31) expresion -> . expresion GREATER_EQUAL term
    (32) expresion -> . expresion GREATER_THAN term
    (33) expresion -> . expresion SMALLER_THAN term
    (34) expresion -> . expresion SMALLER_EQUAL term
    (35) expresion -> . term
    (16) variable -> . VARIABLE_LOCAL
    (17) variable -> . VARIABLE_INSTANCE
    (18) variable -> . VARIABLE_CLASS
    (19) variable -> . VARIABLE_GLOBAL
    (20) variable -> . CONSTANT
    (36) term -> . NUMBER
    (37) term -> . variable
    (38) term -> . L_PAREN expresion R_PAREN

    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    MULTIPLICATION  shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    MODULE          shift and go to state 31
    AND_LOGIC       shift and go to state 32
    OR_LOGIC        shift and go to state 33
    EQUALITY        shift and go to state 34
    EQUALITY_OF_CASE shift and go to state 35
    GREATER_EQUAL   shift and go to state 36
    GREATER_THAN    shift and go to state 37
    SMALLER_THAN    shift and go to state 38
    SMALLER_EQUAL   shift and go to state 39
    PUTS            shift and go to state 14
    VARIABLE_LOCAL  shift and go to state 8
    VARIABLE_INSTANCE shift and go to state 15
    VARIABLE_CLASS  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 17
    CONSTANT        shift and go to state 18
    NUMBER          shift and go to state 19
    L_PAREN         shift and go to state 9

    expresion                      shift and go to state 81
    cuerpo                         shift and go to state 85
    term                           shift and go to state 11
    declaracion                    shift and go to state 79
    print                          shift and go to state 80
    variable                       shift and go to state 10

state 56

    (21) expresion -> expresion PLUS term .

    PLUS            reduce using rule 21 (expresion -> expresion PLUS term .)
    MINUS           reduce using rule 21 (expresion -> expresion PLUS term .)
    MULTIPLICATION  reduce using rule 21 (expresion -> expresion PLUS term .)
    DIVIDE          reduce using rule 21 (expresion -> expresion PLUS term .)
    EXPONENT        reduce using rule 21 (expresion -> expresion PLUS term .)
    MODULE          reduce using rule 21 (expresion -> expresion PLUS term .)
    AND_LOGIC       reduce using rule 21 (expresion -> expresion PLUS term .)
    OR_LOGIC        reduce using rule 21 (expresion -> expresion PLUS term .)
    EQUALITY        reduce using rule 21 (expresion -> expresion PLUS term .)
    EQUALITY_OF_CASE reduce using rule 21 (expresion -> expresion PLUS term .)
    GREATER_EQUAL   reduce using rule 21 (expresion -> expresion PLUS term .)
    GREATER_THAN    reduce using rule 21 (expresion -> expresion PLUS term .)
    SMALLER_THAN    reduce using rule 21 (expresion -> expresion PLUS term .)
    SMALLER_EQUAL   reduce using rule 21 (expresion -> expresion PLUS term .)
    $end            reduce using rule 21 (expresion -> expresion PLUS term .)
    R_PAREN         reduce using rule 21 (expresion -> expresion PLUS term .)
    PUTS            reduce using rule 21 (expresion -> expresion PLUS term .)
    VARIABLE_LOCAL  reduce using rule 21 (expresion -> expresion PLUS term .)
    VARIABLE_INSTANCE reduce using rule 21 (expresion -> expresion PLUS term .)
    VARIABLE_CLASS  reduce using rule 21 (expresion -> expresion PLUS term .)
    VARIABLE_GLOBAL reduce using rule 21 (expresion -> expresion PLUS term .)
    CONSTANT        reduce using rule 21 (expresion -> expresion PLUS term .)
    NUMBER          reduce using rule 21 (expresion -> expresion PLUS term .)
    L_PAREN         reduce using rule 21 (expresion -> expresion PLUS term .)
    END             reduce using rule 21 (expresion -> expresion PLUS term .)
    ELSE            reduce using rule 21 (expresion -> expresion PLUS term .)
    ELSIF           reduce using rule 21 (expresion -> expresion PLUS term .)


state 57

    (22) expresion -> expresion MINUS term .

    PLUS            reduce using rule 22 (expresion -> expresion MINUS term .)
    MINUS           reduce using rule 22 (expresion -> expresion MINUS term .)
    MULTIPLICATION  reduce using rule 22 (expresion -> expresion MINUS term .)
    DIVIDE          reduce using rule 22 (expresion -> expresion MINUS term .)
    EXPONENT        reduce using rule 22 (expresion -> expresion MINUS term .)
    MODULE          reduce using rule 22 (expresion -> expresion MINUS term .)
    AND_LOGIC       reduce using rule 22 (expresion -> expresion MINUS term .)
    OR_LOGIC        reduce using rule 22 (expresion -> expresion MINUS term .)
    EQUALITY        reduce using rule 22 (expresion -> expresion MINUS term .)
    EQUALITY_OF_CASE reduce using rule 22 (expresion -> expresion MINUS term .)
    GREATER_EQUAL   reduce using rule 22 (expresion -> expresion MINUS term .)
    GREATER_THAN    reduce using rule 22 (expresion -> expresion MINUS term .)
    SMALLER_THAN    reduce using rule 22 (expresion -> expresion MINUS term .)
    SMALLER_EQUAL   reduce using rule 22 (expresion -> expresion MINUS term .)
    $end            reduce using rule 22 (expresion -> expresion MINUS term .)
    R_PAREN         reduce using rule 22 (expresion -> expresion MINUS term .)
    PUTS            reduce using rule 22 (expresion -> expresion MINUS term .)
    VARIABLE_LOCAL  reduce using rule 22 (expresion -> expresion MINUS term .)
    VARIABLE_INSTANCE reduce using rule 22 (expresion -> expresion MINUS term .)
    VARIABLE_CLASS  reduce using rule 22 (expresion -> expresion MINUS term .)
    VARIABLE_GLOBAL reduce using rule 22 (expresion -> expresion MINUS term .)
    CONSTANT        reduce using rule 22 (expresion -> expresion MINUS term .)
    NUMBER          reduce using rule 22 (expresion -> expresion MINUS term .)
    L_PAREN         reduce using rule 22 (expresion -> expresion MINUS term .)
    END             reduce using rule 22 (expresion -> expresion MINUS term .)
    ELSE            reduce using rule 22 (expresion -> expresion MINUS term .)
    ELSIF           reduce using rule 22 (expresion -> expresion MINUS term .)


state 58

    (23) expresion -> expresion MULTIPLICATION term .

    PLUS            reduce using rule 23 (expresion -> expresion MULTIPLICATION term .)
    MINUS           reduce using rule 23 (expresion -> expresion MULTIPLICATION term .)
    MULTIPLICATION  reduce using rule 23 (expresion -> expresion MULTIPLICATION term .)
    DIVIDE          reduce using rule 23 (expresion -> expresion MULTIPLICATION term .)
    EXPONENT        reduce using rule 23 (expresion -> expresion MULTIPLICATION term .)
    MODULE          reduce using rule 23 (expresion -> expresion MULTIPLICATION term .)
    AND_LOGIC       reduce using rule 23 (expresion -> expresion MULTIPLICATION term .)
    OR_LOGIC        reduce using rule 23 (expresion -> expresion MULTIPLICATION term .)
    EQUALITY        reduce using rule 23 (expresion -> expresion MULTIPLICATION term .)
    EQUALITY_OF_CASE reduce using rule 23 (expresion -> expresion MULTIPLICATION term .)
    GREATER_EQUAL   reduce using rule 23 (expresion -> expresion MULTIPLICATION term .)
    GREATER_THAN    reduce using rule 23 (expresion -> expresion MULTIPLICATION term .)
    SMALLER_THAN    reduce using rule 23 (expresion -> expresion MULTIPLICATION term .)
    SMALLER_EQUAL   reduce using rule 23 (expresion -> expresion MULTIPLICATION term .)
    $end            reduce using rule 23 (expresion -> expresion MULTIPLICATION term .)
    R_PAREN         reduce using rule 23 (expresion -> expresion MULTIPLICATION term .)
    PUTS            reduce using rule 23 (expresion -> expresion MULTIPLICATION term .)
    VARIABLE_LOCAL  reduce using rule 23 (expresion -> expresion MULTIPLICATION term .)
    VARIABLE_INSTANCE reduce using rule 23 (expresion -> expresion MULTIPLICATION term .)
    VARIABLE_CLASS  reduce using rule 23 (expresion -> expresion MULTIPLICATION term .)
    VARIABLE_GLOBAL reduce using rule 23 (expresion -> expresion MULTIPLICATION term .)
    CONSTANT        reduce using rule 23 (expresion -> expresion MULTIPLICATION term .)
    NUMBER          reduce using rule 23 (expresion -> expresion MULTIPLICATION term .)
    L_PAREN         reduce using rule 23 (expresion -> expresion MULTIPLICATION term .)
    END             reduce using rule 23 (expresion -> expresion MULTIPLICATION term .)
    ELSE            reduce using rule 23 (expresion -> expresion MULTIPLICATION term .)
    ELSIF           reduce using rule 23 (expresion -> expresion MULTIPLICATION term .)


state 59

    (24) expresion -> expresion DIVIDE term .

    PLUS            reduce using rule 24 (expresion -> expresion DIVIDE term .)
    MINUS           reduce using rule 24 (expresion -> expresion DIVIDE term .)
    MULTIPLICATION  reduce using rule 24 (expresion -> expresion DIVIDE term .)
    DIVIDE          reduce using rule 24 (expresion -> expresion DIVIDE term .)
    EXPONENT        reduce using rule 24 (expresion -> expresion DIVIDE term .)
    MODULE          reduce using rule 24 (expresion -> expresion DIVIDE term .)
    AND_LOGIC       reduce using rule 24 (expresion -> expresion DIVIDE term .)
    OR_LOGIC        reduce using rule 24 (expresion -> expresion DIVIDE term .)
    EQUALITY        reduce using rule 24 (expresion -> expresion DIVIDE term .)
    EQUALITY_OF_CASE reduce using rule 24 (expresion -> expresion DIVIDE term .)
    GREATER_EQUAL   reduce using rule 24 (expresion -> expresion DIVIDE term .)
    GREATER_THAN    reduce using rule 24 (expresion -> expresion DIVIDE term .)
    SMALLER_THAN    reduce using rule 24 (expresion -> expresion DIVIDE term .)
    SMALLER_EQUAL   reduce using rule 24 (expresion -> expresion DIVIDE term .)
    $end            reduce using rule 24 (expresion -> expresion DIVIDE term .)
    R_PAREN         reduce using rule 24 (expresion -> expresion DIVIDE term .)
    PUTS            reduce using rule 24 (expresion -> expresion DIVIDE term .)
    VARIABLE_LOCAL  reduce using rule 24 (expresion -> expresion DIVIDE term .)
    VARIABLE_INSTANCE reduce using rule 24 (expresion -> expresion DIVIDE term .)
    VARIABLE_CLASS  reduce using rule 24 (expresion -> expresion DIVIDE term .)
    VARIABLE_GLOBAL reduce using rule 24 (expresion -> expresion DIVIDE term .)
    CONSTANT        reduce using rule 24 (expresion -> expresion DIVIDE term .)
    NUMBER          reduce using rule 24 (expresion -> expresion DIVIDE term .)
    L_PAREN         reduce using rule 24 (expresion -> expresion DIVIDE term .)
    END             reduce using rule 24 (expresion -> expresion DIVIDE term .)
    ELSE            reduce using rule 24 (expresion -> expresion DIVIDE term .)
    ELSIF           reduce using rule 24 (expresion -> expresion DIVIDE term .)


state 60

    (25) expresion -> expresion EXPONENT term .

    PLUS            reduce using rule 25 (expresion -> expresion EXPONENT term .)
    MINUS           reduce using rule 25 (expresion -> expresion EXPONENT term .)
    MULTIPLICATION  reduce using rule 25 (expresion -> expresion EXPONENT term .)
    DIVIDE          reduce using rule 25 (expresion -> expresion EXPONENT term .)
    EXPONENT        reduce using rule 25 (expresion -> expresion EXPONENT term .)
    MODULE          reduce using rule 25 (expresion -> expresion EXPONENT term .)
    AND_LOGIC       reduce using rule 25 (expresion -> expresion EXPONENT term .)
    OR_LOGIC        reduce using rule 25 (expresion -> expresion EXPONENT term .)
    EQUALITY        reduce using rule 25 (expresion -> expresion EXPONENT term .)
    EQUALITY_OF_CASE reduce using rule 25 (expresion -> expresion EXPONENT term .)
    GREATER_EQUAL   reduce using rule 25 (expresion -> expresion EXPONENT term .)
    GREATER_THAN    reduce using rule 25 (expresion -> expresion EXPONENT term .)
    SMALLER_THAN    reduce using rule 25 (expresion -> expresion EXPONENT term .)
    SMALLER_EQUAL   reduce using rule 25 (expresion -> expresion EXPONENT term .)
    $end            reduce using rule 25 (expresion -> expresion EXPONENT term .)
    R_PAREN         reduce using rule 25 (expresion -> expresion EXPONENT term .)
    PUTS            reduce using rule 25 (expresion -> expresion EXPONENT term .)
    VARIABLE_LOCAL  reduce using rule 25 (expresion -> expresion EXPONENT term .)
    VARIABLE_INSTANCE reduce using rule 25 (expresion -> expresion EXPONENT term .)
    VARIABLE_CLASS  reduce using rule 25 (expresion -> expresion EXPONENT term .)
    VARIABLE_GLOBAL reduce using rule 25 (expresion -> expresion EXPONENT term .)
    CONSTANT        reduce using rule 25 (expresion -> expresion EXPONENT term .)
    NUMBER          reduce using rule 25 (expresion -> expresion EXPONENT term .)
    L_PAREN         reduce using rule 25 (expresion -> expresion EXPONENT term .)
    END             reduce using rule 25 (expresion -> expresion EXPONENT term .)
    ELSE            reduce using rule 25 (expresion -> expresion EXPONENT term .)
    ELSIF           reduce using rule 25 (expresion -> expresion EXPONENT term .)


state 61

    (26) expresion -> expresion MODULE term .

    PLUS            reduce using rule 26 (expresion -> expresion MODULE term .)
    MINUS           reduce using rule 26 (expresion -> expresion MODULE term .)
    MULTIPLICATION  reduce using rule 26 (expresion -> expresion MODULE term .)
    DIVIDE          reduce using rule 26 (expresion -> expresion MODULE term .)
    EXPONENT        reduce using rule 26 (expresion -> expresion MODULE term .)
    MODULE          reduce using rule 26 (expresion -> expresion MODULE term .)
    AND_LOGIC       reduce using rule 26 (expresion -> expresion MODULE term .)
    OR_LOGIC        reduce using rule 26 (expresion -> expresion MODULE term .)
    EQUALITY        reduce using rule 26 (expresion -> expresion MODULE term .)
    EQUALITY_OF_CASE reduce using rule 26 (expresion -> expresion MODULE term .)
    GREATER_EQUAL   reduce using rule 26 (expresion -> expresion MODULE term .)
    GREATER_THAN    reduce using rule 26 (expresion -> expresion MODULE term .)
    SMALLER_THAN    reduce using rule 26 (expresion -> expresion MODULE term .)
    SMALLER_EQUAL   reduce using rule 26 (expresion -> expresion MODULE term .)
    $end            reduce using rule 26 (expresion -> expresion MODULE term .)
    R_PAREN         reduce using rule 26 (expresion -> expresion MODULE term .)
    PUTS            reduce using rule 26 (expresion -> expresion MODULE term .)
    VARIABLE_LOCAL  reduce using rule 26 (expresion -> expresion MODULE term .)
    VARIABLE_INSTANCE reduce using rule 26 (expresion -> expresion MODULE term .)
    VARIABLE_CLASS  reduce using rule 26 (expresion -> expresion MODULE term .)
    VARIABLE_GLOBAL reduce using rule 26 (expresion -> expresion MODULE term .)
    CONSTANT        reduce using rule 26 (expresion -> expresion MODULE term .)
    NUMBER          reduce using rule 26 (expresion -> expresion MODULE term .)
    L_PAREN         reduce using rule 26 (expresion -> expresion MODULE term .)
    END             reduce using rule 26 (expresion -> expresion MODULE term .)
    ELSE            reduce using rule 26 (expresion -> expresion MODULE term .)
    ELSIF           reduce using rule 26 (expresion -> expresion MODULE term .)


state 62

    (27) expresion -> expresion AND_LOGIC term .

    PLUS            reduce using rule 27 (expresion -> expresion AND_LOGIC term .)
    MINUS           reduce using rule 27 (expresion -> expresion AND_LOGIC term .)
    MULTIPLICATION  reduce using rule 27 (expresion -> expresion AND_LOGIC term .)
    DIVIDE          reduce using rule 27 (expresion -> expresion AND_LOGIC term .)
    EXPONENT        reduce using rule 27 (expresion -> expresion AND_LOGIC term .)
    MODULE          reduce using rule 27 (expresion -> expresion AND_LOGIC term .)
    AND_LOGIC       reduce using rule 27 (expresion -> expresion AND_LOGIC term .)
    OR_LOGIC        reduce using rule 27 (expresion -> expresion AND_LOGIC term .)
    EQUALITY        reduce using rule 27 (expresion -> expresion AND_LOGIC term .)
    EQUALITY_OF_CASE reduce using rule 27 (expresion -> expresion AND_LOGIC term .)
    GREATER_EQUAL   reduce using rule 27 (expresion -> expresion AND_LOGIC term .)
    GREATER_THAN    reduce using rule 27 (expresion -> expresion AND_LOGIC term .)
    SMALLER_THAN    reduce using rule 27 (expresion -> expresion AND_LOGIC term .)
    SMALLER_EQUAL   reduce using rule 27 (expresion -> expresion AND_LOGIC term .)
    $end            reduce using rule 27 (expresion -> expresion AND_LOGIC term .)
    R_PAREN         reduce using rule 27 (expresion -> expresion AND_LOGIC term .)
    PUTS            reduce using rule 27 (expresion -> expresion AND_LOGIC term .)
    VARIABLE_LOCAL  reduce using rule 27 (expresion -> expresion AND_LOGIC term .)
    VARIABLE_INSTANCE reduce using rule 27 (expresion -> expresion AND_LOGIC term .)
    VARIABLE_CLASS  reduce using rule 27 (expresion -> expresion AND_LOGIC term .)
    VARIABLE_GLOBAL reduce using rule 27 (expresion -> expresion AND_LOGIC term .)
    CONSTANT        reduce using rule 27 (expresion -> expresion AND_LOGIC term .)
    NUMBER          reduce using rule 27 (expresion -> expresion AND_LOGIC term .)
    L_PAREN         reduce using rule 27 (expresion -> expresion AND_LOGIC term .)
    END             reduce using rule 27 (expresion -> expresion AND_LOGIC term .)
    ELSE            reduce using rule 27 (expresion -> expresion AND_LOGIC term .)
    ELSIF           reduce using rule 27 (expresion -> expresion AND_LOGIC term .)


state 63

    (28) expresion -> expresion OR_LOGIC term .

    PLUS            reduce using rule 28 (expresion -> expresion OR_LOGIC term .)
    MINUS           reduce using rule 28 (expresion -> expresion OR_LOGIC term .)
    MULTIPLICATION  reduce using rule 28 (expresion -> expresion OR_LOGIC term .)
    DIVIDE          reduce using rule 28 (expresion -> expresion OR_LOGIC term .)
    EXPONENT        reduce using rule 28 (expresion -> expresion OR_LOGIC term .)
    MODULE          reduce using rule 28 (expresion -> expresion OR_LOGIC term .)
    AND_LOGIC       reduce using rule 28 (expresion -> expresion OR_LOGIC term .)
    OR_LOGIC        reduce using rule 28 (expresion -> expresion OR_LOGIC term .)
    EQUALITY        reduce using rule 28 (expresion -> expresion OR_LOGIC term .)
    EQUALITY_OF_CASE reduce using rule 28 (expresion -> expresion OR_LOGIC term .)
    GREATER_EQUAL   reduce using rule 28 (expresion -> expresion OR_LOGIC term .)
    GREATER_THAN    reduce using rule 28 (expresion -> expresion OR_LOGIC term .)
    SMALLER_THAN    reduce using rule 28 (expresion -> expresion OR_LOGIC term .)
    SMALLER_EQUAL   reduce using rule 28 (expresion -> expresion OR_LOGIC term .)
    $end            reduce using rule 28 (expresion -> expresion OR_LOGIC term .)
    R_PAREN         reduce using rule 28 (expresion -> expresion OR_LOGIC term .)
    PUTS            reduce using rule 28 (expresion -> expresion OR_LOGIC term .)
    VARIABLE_LOCAL  reduce using rule 28 (expresion -> expresion OR_LOGIC term .)
    VARIABLE_INSTANCE reduce using rule 28 (expresion -> expresion OR_LOGIC term .)
    VARIABLE_CLASS  reduce using rule 28 (expresion -> expresion OR_LOGIC term .)
    VARIABLE_GLOBAL reduce using rule 28 (expresion -> expresion OR_LOGIC term .)
    CONSTANT        reduce using rule 28 (expresion -> expresion OR_LOGIC term .)
    NUMBER          reduce using rule 28 (expresion -> expresion OR_LOGIC term .)
    L_PAREN         reduce using rule 28 (expresion -> expresion OR_LOGIC term .)
    END             reduce using rule 28 (expresion -> expresion OR_LOGIC term .)
    ELSE            reduce using rule 28 (expresion -> expresion OR_LOGIC term .)
    ELSIF           reduce using rule 28 (expresion -> expresion OR_LOGIC term .)


state 64

    (29) expresion -> expresion EQUALITY term .

    PLUS            reduce using rule 29 (expresion -> expresion EQUALITY term .)
    MINUS           reduce using rule 29 (expresion -> expresion EQUALITY term .)
    MULTIPLICATION  reduce using rule 29 (expresion -> expresion EQUALITY term .)
    DIVIDE          reduce using rule 29 (expresion -> expresion EQUALITY term .)
    EXPONENT        reduce using rule 29 (expresion -> expresion EQUALITY term .)
    MODULE          reduce using rule 29 (expresion -> expresion EQUALITY term .)
    AND_LOGIC       reduce using rule 29 (expresion -> expresion EQUALITY term .)
    OR_LOGIC        reduce using rule 29 (expresion -> expresion EQUALITY term .)
    EQUALITY        reduce using rule 29 (expresion -> expresion EQUALITY term .)
    EQUALITY_OF_CASE reduce using rule 29 (expresion -> expresion EQUALITY term .)
    GREATER_EQUAL   reduce using rule 29 (expresion -> expresion EQUALITY term .)
    GREATER_THAN    reduce using rule 29 (expresion -> expresion EQUALITY term .)
    SMALLER_THAN    reduce using rule 29 (expresion -> expresion EQUALITY term .)
    SMALLER_EQUAL   reduce using rule 29 (expresion -> expresion EQUALITY term .)
    $end            reduce using rule 29 (expresion -> expresion EQUALITY term .)
    R_PAREN         reduce using rule 29 (expresion -> expresion EQUALITY term .)
    PUTS            reduce using rule 29 (expresion -> expresion EQUALITY term .)
    VARIABLE_LOCAL  reduce using rule 29 (expresion -> expresion EQUALITY term .)
    VARIABLE_INSTANCE reduce using rule 29 (expresion -> expresion EQUALITY term .)
    VARIABLE_CLASS  reduce using rule 29 (expresion -> expresion EQUALITY term .)
    VARIABLE_GLOBAL reduce using rule 29 (expresion -> expresion EQUALITY term .)
    CONSTANT        reduce using rule 29 (expresion -> expresion EQUALITY term .)
    NUMBER          reduce using rule 29 (expresion -> expresion EQUALITY term .)
    L_PAREN         reduce using rule 29 (expresion -> expresion EQUALITY term .)
    END             reduce using rule 29 (expresion -> expresion EQUALITY term .)
    ELSE            reduce using rule 29 (expresion -> expresion EQUALITY term .)
    ELSIF           reduce using rule 29 (expresion -> expresion EQUALITY term .)


state 65

    (30) expresion -> expresion EQUALITY_OF_CASE term .

    PLUS            reduce using rule 30 (expresion -> expresion EQUALITY_OF_CASE term .)
    MINUS           reduce using rule 30 (expresion -> expresion EQUALITY_OF_CASE term .)
    MULTIPLICATION  reduce using rule 30 (expresion -> expresion EQUALITY_OF_CASE term .)
    DIVIDE          reduce using rule 30 (expresion -> expresion EQUALITY_OF_CASE term .)
    EXPONENT        reduce using rule 30 (expresion -> expresion EQUALITY_OF_CASE term .)
    MODULE          reduce using rule 30 (expresion -> expresion EQUALITY_OF_CASE term .)
    AND_LOGIC       reduce using rule 30 (expresion -> expresion EQUALITY_OF_CASE term .)
    OR_LOGIC        reduce using rule 30 (expresion -> expresion EQUALITY_OF_CASE term .)
    EQUALITY        reduce using rule 30 (expresion -> expresion EQUALITY_OF_CASE term .)
    EQUALITY_OF_CASE reduce using rule 30 (expresion -> expresion EQUALITY_OF_CASE term .)
    GREATER_EQUAL   reduce using rule 30 (expresion -> expresion EQUALITY_OF_CASE term .)
    GREATER_THAN    reduce using rule 30 (expresion -> expresion EQUALITY_OF_CASE term .)
    SMALLER_THAN    reduce using rule 30 (expresion -> expresion EQUALITY_OF_CASE term .)
    SMALLER_EQUAL   reduce using rule 30 (expresion -> expresion EQUALITY_OF_CASE term .)
    $end            reduce using rule 30 (expresion -> expresion EQUALITY_OF_CASE term .)
    R_PAREN         reduce using rule 30 (expresion -> expresion EQUALITY_OF_CASE term .)
    PUTS            reduce using rule 30 (expresion -> expresion EQUALITY_OF_CASE term .)
    VARIABLE_LOCAL  reduce using rule 30 (expresion -> expresion EQUALITY_OF_CASE term .)
    VARIABLE_INSTANCE reduce using rule 30 (expresion -> expresion EQUALITY_OF_CASE term .)
    VARIABLE_CLASS  reduce using rule 30 (expresion -> expresion EQUALITY_OF_CASE term .)
    VARIABLE_GLOBAL reduce using rule 30 (expresion -> expresion EQUALITY_OF_CASE term .)
    CONSTANT        reduce using rule 30 (expresion -> expresion EQUALITY_OF_CASE term .)
    NUMBER          reduce using rule 30 (expresion -> expresion EQUALITY_OF_CASE term .)
    L_PAREN         reduce using rule 30 (expresion -> expresion EQUALITY_OF_CASE term .)
    END             reduce using rule 30 (expresion -> expresion EQUALITY_OF_CASE term .)
    ELSE            reduce using rule 30 (expresion -> expresion EQUALITY_OF_CASE term .)
    ELSIF           reduce using rule 30 (expresion -> expresion EQUALITY_OF_CASE term .)


state 66

    (31) expresion -> expresion GREATER_EQUAL term .

    PLUS            reduce using rule 31 (expresion -> expresion GREATER_EQUAL term .)
    MINUS           reduce using rule 31 (expresion -> expresion GREATER_EQUAL term .)
    MULTIPLICATION  reduce using rule 31 (expresion -> expresion GREATER_EQUAL term .)
    DIVIDE          reduce using rule 31 (expresion -> expresion GREATER_EQUAL term .)
    EXPONENT        reduce using rule 31 (expresion -> expresion GREATER_EQUAL term .)
    MODULE          reduce using rule 31 (expresion -> expresion GREATER_EQUAL term .)
    AND_LOGIC       reduce using rule 31 (expresion -> expresion GREATER_EQUAL term .)
    OR_LOGIC        reduce using rule 31 (expresion -> expresion GREATER_EQUAL term .)
    EQUALITY        reduce using rule 31 (expresion -> expresion GREATER_EQUAL term .)
    EQUALITY_OF_CASE reduce using rule 31 (expresion -> expresion GREATER_EQUAL term .)
    GREATER_EQUAL   reduce using rule 31 (expresion -> expresion GREATER_EQUAL term .)
    GREATER_THAN    reduce using rule 31 (expresion -> expresion GREATER_EQUAL term .)
    SMALLER_THAN    reduce using rule 31 (expresion -> expresion GREATER_EQUAL term .)
    SMALLER_EQUAL   reduce using rule 31 (expresion -> expresion GREATER_EQUAL term .)
    $end            reduce using rule 31 (expresion -> expresion GREATER_EQUAL term .)
    R_PAREN         reduce using rule 31 (expresion -> expresion GREATER_EQUAL term .)
    PUTS            reduce using rule 31 (expresion -> expresion GREATER_EQUAL term .)
    VARIABLE_LOCAL  reduce using rule 31 (expresion -> expresion GREATER_EQUAL term .)
    VARIABLE_INSTANCE reduce using rule 31 (expresion -> expresion GREATER_EQUAL term .)
    VARIABLE_CLASS  reduce using rule 31 (expresion -> expresion GREATER_EQUAL term .)
    VARIABLE_GLOBAL reduce using rule 31 (expresion -> expresion GREATER_EQUAL term .)
    CONSTANT        reduce using rule 31 (expresion -> expresion GREATER_EQUAL term .)
    NUMBER          reduce using rule 31 (expresion -> expresion GREATER_EQUAL term .)
    L_PAREN         reduce using rule 31 (expresion -> expresion GREATER_EQUAL term .)
    END             reduce using rule 31 (expresion -> expresion GREATER_EQUAL term .)
    ELSE            reduce using rule 31 (expresion -> expresion GREATER_EQUAL term .)
    ELSIF           reduce using rule 31 (expresion -> expresion GREATER_EQUAL term .)


state 67

    (32) expresion -> expresion GREATER_THAN term .

    PLUS            reduce using rule 32 (expresion -> expresion GREATER_THAN term .)
    MINUS           reduce using rule 32 (expresion -> expresion GREATER_THAN term .)
    MULTIPLICATION  reduce using rule 32 (expresion -> expresion GREATER_THAN term .)
    DIVIDE          reduce using rule 32 (expresion -> expresion GREATER_THAN term .)
    EXPONENT        reduce using rule 32 (expresion -> expresion GREATER_THAN term .)
    MODULE          reduce using rule 32 (expresion -> expresion GREATER_THAN term .)
    AND_LOGIC       reduce using rule 32 (expresion -> expresion GREATER_THAN term .)
    OR_LOGIC        reduce using rule 32 (expresion -> expresion GREATER_THAN term .)
    EQUALITY        reduce using rule 32 (expresion -> expresion GREATER_THAN term .)
    EQUALITY_OF_CASE reduce using rule 32 (expresion -> expresion GREATER_THAN term .)
    GREATER_EQUAL   reduce using rule 32 (expresion -> expresion GREATER_THAN term .)
    GREATER_THAN    reduce using rule 32 (expresion -> expresion GREATER_THAN term .)
    SMALLER_THAN    reduce using rule 32 (expresion -> expresion GREATER_THAN term .)
    SMALLER_EQUAL   reduce using rule 32 (expresion -> expresion GREATER_THAN term .)
    $end            reduce using rule 32 (expresion -> expresion GREATER_THAN term .)
    R_PAREN         reduce using rule 32 (expresion -> expresion GREATER_THAN term .)
    PUTS            reduce using rule 32 (expresion -> expresion GREATER_THAN term .)
    VARIABLE_LOCAL  reduce using rule 32 (expresion -> expresion GREATER_THAN term .)
    VARIABLE_INSTANCE reduce using rule 32 (expresion -> expresion GREATER_THAN term .)
    VARIABLE_CLASS  reduce using rule 32 (expresion -> expresion GREATER_THAN term .)
    VARIABLE_GLOBAL reduce using rule 32 (expresion -> expresion GREATER_THAN term .)
    CONSTANT        reduce using rule 32 (expresion -> expresion GREATER_THAN term .)
    NUMBER          reduce using rule 32 (expresion -> expresion GREATER_THAN term .)
    L_PAREN         reduce using rule 32 (expresion -> expresion GREATER_THAN term .)
    END             reduce using rule 32 (expresion -> expresion GREATER_THAN term .)
    ELSE            reduce using rule 32 (expresion -> expresion GREATER_THAN term .)
    ELSIF           reduce using rule 32 (expresion -> expresion GREATER_THAN term .)


state 68

    (33) expresion -> expresion SMALLER_THAN term .

    PLUS            reduce using rule 33 (expresion -> expresion SMALLER_THAN term .)
    MINUS           reduce using rule 33 (expresion -> expresion SMALLER_THAN term .)
    MULTIPLICATION  reduce using rule 33 (expresion -> expresion SMALLER_THAN term .)
    DIVIDE          reduce using rule 33 (expresion -> expresion SMALLER_THAN term .)
    EXPONENT        reduce using rule 33 (expresion -> expresion SMALLER_THAN term .)
    MODULE          reduce using rule 33 (expresion -> expresion SMALLER_THAN term .)
    AND_LOGIC       reduce using rule 33 (expresion -> expresion SMALLER_THAN term .)
    OR_LOGIC        reduce using rule 33 (expresion -> expresion SMALLER_THAN term .)
    EQUALITY        reduce using rule 33 (expresion -> expresion SMALLER_THAN term .)
    EQUALITY_OF_CASE reduce using rule 33 (expresion -> expresion SMALLER_THAN term .)
    GREATER_EQUAL   reduce using rule 33 (expresion -> expresion SMALLER_THAN term .)
    GREATER_THAN    reduce using rule 33 (expresion -> expresion SMALLER_THAN term .)
    SMALLER_THAN    reduce using rule 33 (expresion -> expresion SMALLER_THAN term .)
    SMALLER_EQUAL   reduce using rule 33 (expresion -> expresion SMALLER_THAN term .)
    $end            reduce using rule 33 (expresion -> expresion SMALLER_THAN term .)
    R_PAREN         reduce using rule 33 (expresion -> expresion SMALLER_THAN term .)
    PUTS            reduce using rule 33 (expresion -> expresion SMALLER_THAN term .)
    VARIABLE_LOCAL  reduce using rule 33 (expresion -> expresion SMALLER_THAN term .)
    VARIABLE_INSTANCE reduce using rule 33 (expresion -> expresion SMALLER_THAN term .)
    VARIABLE_CLASS  reduce using rule 33 (expresion -> expresion SMALLER_THAN term .)
    VARIABLE_GLOBAL reduce using rule 33 (expresion -> expresion SMALLER_THAN term .)
    CONSTANT        reduce using rule 33 (expresion -> expresion SMALLER_THAN term .)
    NUMBER          reduce using rule 33 (expresion -> expresion SMALLER_THAN term .)
    L_PAREN         reduce using rule 33 (expresion -> expresion SMALLER_THAN term .)
    END             reduce using rule 33 (expresion -> expresion SMALLER_THAN term .)
    ELSE            reduce using rule 33 (expresion -> expresion SMALLER_THAN term .)
    ELSIF           reduce using rule 33 (expresion -> expresion SMALLER_THAN term .)


state 69

    (34) expresion -> expresion SMALLER_EQUAL term .

    PLUS            reduce using rule 34 (expresion -> expresion SMALLER_EQUAL term .)
    MINUS           reduce using rule 34 (expresion -> expresion SMALLER_EQUAL term .)
    MULTIPLICATION  reduce using rule 34 (expresion -> expresion SMALLER_EQUAL term .)
    DIVIDE          reduce using rule 34 (expresion -> expresion SMALLER_EQUAL term .)
    EXPONENT        reduce using rule 34 (expresion -> expresion SMALLER_EQUAL term .)
    MODULE          reduce using rule 34 (expresion -> expresion SMALLER_EQUAL term .)
    AND_LOGIC       reduce using rule 34 (expresion -> expresion SMALLER_EQUAL term .)
    OR_LOGIC        reduce using rule 34 (expresion -> expresion SMALLER_EQUAL term .)
    EQUALITY        reduce using rule 34 (expresion -> expresion SMALLER_EQUAL term .)
    EQUALITY_OF_CASE reduce using rule 34 (expresion -> expresion SMALLER_EQUAL term .)
    GREATER_EQUAL   reduce using rule 34 (expresion -> expresion SMALLER_EQUAL term .)
    GREATER_THAN    reduce using rule 34 (expresion -> expresion SMALLER_EQUAL term .)
    SMALLER_THAN    reduce using rule 34 (expresion -> expresion SMALLER_EQUAL term .)
    SMALLER_EQUAL   reduce using rule 34 (expresion -> expresion SMALLER_EQUAL term .)
    $end            reduce using rule 34 (expresion -> expresion SMALLER_EQUAL term .)
    R_PAREN         reduce using rule 34 (expresion -> expresion SMALLER_EQUAL term .)
    PUTS            reduce using rule 34 (expresion -> expresion SMALLER_EQUAL term .)
    VARIABLE_LOCAL  reduce using rule 34 (expresion -> expresion SMALLER_EQUAL term .)
    VARIABLE_INSTANCE reduce using rule 34 (expresion -> expresion SMALLER_EQUAL term .)
    VARIABLE_CLASS  reduce using rule 34 (expresion -> expresion SMALLER_EQUAL term .)
    VARIABLE_GLOBAL reduce using rule 34 (expresion -> expresion SMALLER_EQUAL term .)
    CONSTANT        reduce using rule 34 (expresion -> expresion SMALLER_EQUAL term .)
    NUMBER          reduce using rule 34 (expresion -> expresion SMALLER_EQUAL term .)
    L_PAREN         reduce using rule 34 (expresion -> expresion SMALLER_EQUAL term .)
    END             reduce using rule 34 (expresion -> expresion SMALLER_EQUAL term .)
    ELSE            reduce using rule 34 (expresion -> expresion SMALLER_EQUAL term .)
    ELSIF           reduce using rule 34 (expresion -> expresion SMALLER_EQUAL term .)


state 70

    (6) funcion -> DEF VARIABLE_LOCAL L_PAREN . parametros R_PAREN cuerpo END
    (7) parametros -> . VARIABLE_LOCAL
    (8) parametros -> . VARIABLE_LOCAL COMMA parametros

    VARIABLE_LOCAL  shift and go to state 86

    parametros                     shift and go to state 87

state 71

    (38) term -> L_PAREN expresion R_PAREN .

    PLUS            reduce using rule 38 (term -> L_PAREN expresion R_PAREN .)
    MINUS           reduce using rule 38 (term -> L_PAREN expresion R_PAREN .)
    MULTIPLICATION  reduce using rule 38 (term -> L_PAREN expresion R_PAREN .)
    DIVIDE          reduce using rule 38 (term -> L_PAREN expresion R_PAREN .)
    EXPONENT        reduce using rule 38 (term -> L_PAREN expresion R_PAREN .)
    MODULE          reduce using rule 38 (term -> L_PAREN expresion R_PAREN .)
    AND_LOGIC       reduce using rule 38 (term -> L_PAREN expresion R_PAREN .)
    OR_LOGIC        reduce using rule 38 (term -> L_PAREN expresion R_PAREN .)
    EQUALITY        reduce using rule 38 (term -> L_PAREN expresion R_PAREN .)
    EQUALITY_OF_CASE reduce using rule 38 (term -> L_PAREN expresion R_PAREN .)
    GREATER_EQUAL   reduce using rule 38 (term -> L_PAREN expresion R_PAREN .)
    GREATER_THAN    reduce using rule 38 (term -> L_PAREN expresion R_PAREN .)
    SMALLER_THAN    reduce using rule 38 (term -> L_PAREN expresion R_PAREN .)
    SMALLER_EQUAL   reduce using rule 38 (term -> L_PAREN expresion R_PAREN .)
    $end            reduce using rule 38 (term -> L_PAREN expresion R_PAREN .)
    R_PAREN         reduce using rule 38 (term -> L_PAREN expresion R_PAREN .)
    PUTS            reduce using rule 38 (term -> L_PAREN expresion R_PAREN .)
    VARIABLE_LOCAL  reduce using rule 38 (term -> L_PAREN expresion R_PAREN .)
    VARIABLE_INSTANCE reduce using rule 38 (term -> L_PAREN expresion R_PAREN .)
    VARIABLE_CLASS  reduce using rule 38 (term -> L_PAREN expresion R_PAREN .)
    VARIABLE_GLOBAL reduce using rule 38 (term -> L_PAREN expresion R_PAREN .)
    CONSTANT        reduce using rule 38 (term -> L_PAREN expresion R_PAREN .)
    NUMBER          reduce using rule 38 (term -> L_PAREN expresion R_PAREN .)
    L_PAREN         reduce using rule 38 (term -> L_PAREN expresion R_PAREN .)
    END             reduce using rule 38 (term -> L_PAREN expresion R_PAREN .)
    ELSE            reduce using rule 38 (term -> L_PAREN expresion R_PAREN .)
    ELSIF           reduce using rule 38 (term -> L_PAREN expresion R_PAREN .)


state 72

    (15) declaracion -> variable EQUAL expresion .
    (21) expresion -> expresion . PLUS term
    (22) expresion -> expresion . MINUS term
    (23) expresion -> expresion . MULTIPLICATION term
    (24) expresion -> expresion . DIVIDE term
    (25) expresion -> expresion . EXPONENT term
    (26) expresion -> expresion . MODULE term
    (27) expresion -> expresion . AND_LOGIC term
    (28) expresion -> expresion . OR_LOGIC term
    (29) expresion -> expresion . EQUALITY term
    (30) expresion -> expresion . EQUALITY_OF_CASE term
    (31) expresion -> expresion . GREATER_EQUAL term
    (32) expresion -> expresion . GREATER_THAN term
    (33) expresion -> expresion . SMALLER_THAN term
    (34) expresion -> expresion . SMALLER_EQUAL term

    $end            reduce using rule 15 (declaracion -> variable EQUAL expresion .)
    PUTS            reduce using rule 15 (declaracion -> variable EQUAL expresion .)
    VARIABLE_LOCAL  reduce using rule 15 (declaracion -> variable EQUAL expresion .)
    VARIABLE_INSTANCE reduce using rule 15 (declaracion -> variable EQUAL expresion .)
    VARIABLE_CLASS  reduce using rule 15 (declaracion -> variable EQUAL expresion .)
    VARIABLE_GLOBAL reduce using rule 15 (declaracion -> variable EQUAL expresion .)
    CONSTANT        reduce using rule 15 (declaracion -> variable EQUAL expresion .)
    NUMBER          reduce using rule 15 (declaracion -> variable EQUAL expresion .)
    L_PAREN         reduce using rule 15 (declaracion -> variable EQUAL expresion .)
    END             reduce using rule 15 (declaracion -> variable EQUAL expresion .)
    ELSE            reduce using rule 15 (declaracion -> variable EQUAL expresion .)
    ELSIF           reduce using rule 15 (declaracion -> variable EQUAL expresion .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    MULTIPLICATION  shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    MODULE          shift and go to state 31
    AND_LOGIC       shift and go to state 32
    OR_LOGIC        shift and go to state 33
    EQUALITY        shift and go to state 34
    EQUALITY_OF_CASE shift and go to state 35
    GREATER_EQUAL   shift and go to state 36
    GREATER_THAN    shift and go to state 37
    SMALLER_THAN    shift and go to state 38
    SMALLER_EQUAL   shift and go to state 39


state 73

    (39) print -> PUTS L_PAREN expresion . R_PAREN
    (21) expresion -> expresion . PLUS term
    (22) expresion -> expresion . MINUS term
    (23) expresion -> expresion . MULTIPLICATION term
    (24) expresion -> expresion . DIVIDE term
    (25) expresion -> expresion . EXPONENT term
    (26) expresion -> expresion . MODULE term
    (27) expresion -> expresion . AND_LOGIC term
    (28) expresion -> expresion . OR_LOGIC term
    (29) expresion -> expresion . EQUALITY term
    (30) expresion -> expresion . EQUALITY_OF_CASE term
    (31) expresion -> expresion . GREATER_EQUAL term
    (32) expresion -> expresion . GREATER_THAN term
    (33) expresion -> expresion . SMALLER_THAN term
    (34) expresion -> expresion . SMALLER_EQUAL term

    R_PAREN         shift and go to state 88
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    MULTIPLICATION  shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    MODULE          shift and go to state 31
    AND_LOGIC       shift and go to state 32
    OR_LOGIC        shift and go to state 33
    EQUALITY        shift and go to state 34
    EQUALITY_OF_CASE shift and go to state 35
    GREATER_EQUAL   shift and go to state 36
    GREATER_THAN    shift and go to state 37
    SMALLER_THAN    shift and go to state 38
    SMALLER_EQUAL   shift and go to state 39


state 74

    (41) print -> PUTS L_PAREN R_PAREN .

    $end            reduce using rule 41 (print -> PUTS L_PAREN R_PAREN .)
    PUTS            reduce using rule 41 (print -> PUTS L_PAREN R_PAREN .)
    VARIABLE_LOCAL  reduce using rule 41 (print -> PUTS L_PAREN R_PAREN .)
    VARIABLE_INSTANCE reduce using rule 41 (print -> PUTS L_PAREN R_PAREN .)
    VARIABLE_CLASS  reduce using rule 41 (print -> PUTS L_PAREN R_PAREN .)
    VARIABLE_GLOBAL reduce using rule 41 (print -> PUTS L_PAREN R_PAREN .)
    CONSTANT        reduce using rule 41 (print -> PUTS L_PAREN R_PAREN .)
    NUMBER          reduce using rule 41 (print -> PUTS L_PAREN R_PAREN .)
    L_PAREN         reduce using rule 41 (print -> PUTS L_PAREN R_PAREN .)
    END             reduce using rule 41 (print -> PUTS L_PAREN R_PAREN .)
    ELSE            reduce using rule 41 (print -> PUTS L_PAREN R_PAREN .)
    ELSIF           reduce using rule 41 (print -> PUTS L_PAREN R_PAREN .)


state 75

    (40) print -> PUTS L_PAREN variable . R_PAREN
    (37) term -> variable .

  ! shift/reduce conflict for R_PAREN resolved as shift
    R_PAREN         shift and go to state 89
    PLUS            reduce using rule 37 (term -> variable .)
    MINUS           reduce using rule 37 (term -> variable .)
    MULTIPLICATION  reduce using rule 37 (term -> variable .)
    DIVIDE          reduce using rule 37 (term -> variable .)
    EXPONENT        reduce using rule 37 (term -> variable .)
    MODULE          reduce using rule 37 (term -> variable .)
    AND_LOGIC       reduce using rule 37 (term -> variable .)
    OR_LOGIC        reduce using rule 37 (term -> variable .)
    EQUALITY        reduce using rule 37 (term -> variable .)
    EQUALITY_OF_CASE reduce using rule 37 (term -> variable .)
    GREATER_EQUAL   reduce using rule 37 (term -> variable .)
    GREATER_THAN    reduce using rule 37 (term -> variable .)
    SMALLER_THAN    reduce using rule 37 (term -> variable .)
    SMALLER_EQUAL   reduce using rule 37 (term -> variable .)

  ! R_PAREN         [ reduce using rule 37 (term -> variable .) ]


state 76

    (46) estructuraCondicional -> estructuraif estructuraelse END .

    $end            reduce using rule 46 (estructuraCondicional -> estructuraif estructuraelse END .)


state 77

    (47) estructuraCondicional -> estructuraif estructuraelseif END .

    $end            reduce using rule 47 (estructuraCondicional -> estructuraif estructuraelseif END .)


state 78

    (50) estructuraelse -> ELSE cuerpo .

    END             reduce using rule 50 (estructuraelse -> ELSE cuerpo .)


state 79

    (9) cuerpo -> declaracion .
    (10) cuerpo -> declaracion . cuerpo
    (9) cuerpo -> . declaracion
    (10) cuerpo -> . declaracion cuerpo
    (11) cuerpo -> . print
    (12) cuerpo -> . print cuerpo
    (13) cuerpo -> . expresion
    (14) cuerpo -> . expresion cuerpo
    (15) declaracion -> . variable EQUAL expresion
    (39) print -> . PUTS L_PAREN expresion R_PAREN
    (40) print -> . PUTS L_PAREN variable R_PAREN
    (41) print -> . PUTS L_PAREN R_PAREN
    (42) print -> . PUTS STRING
    (21) expresion -> . expresion PLUS term
    (22) expresion -> . expresion MINUS term
    (23) expresion -> . expresion MULTIPLICATION term
    (24) expresion -> . expresion DIVIDE term
    (25) expresion -> . expresion EXPONENT term
    (26) expresion -> . expresion MODULE term
    (27) expresion -> . expresion AND_LOGIC term
    (28) expresion -> . expresion OR_LOGIC term
    (29) expresion -> . expresion EQUALITY term
    (30) expresion -> . expresion EQUALITY_OF_CASE term
    (31) expresion -> . expresion GREATER_EQUAL term
    (32) expresion -> . expresion GREATER_THAN term
    (33) expresion -> . expresion SMALLER_THAN term
    (34) expresion -> . expresion SMALLER_EQUAL term
    (35) expresion -> . term
    (16) variable -> . VARIABLE_LOCAL
    (17) variable -> . VARIABLE_INSTANCE
    (18) variable -> . VARIABLE_CLASS
    (19) variable -> . VARIABLE_GLOBAL
    (20) variable -> . CONSTANT
    (36) term -> . NUMBER
    (37) term -> . variable
    (38) term -> . L_PAREN expresion R_PAREN

    END             reduce using rule 9 (cuerpo -> declaracion .)
    ELSE            reduce using rule 9 (cuerpo -> declaracion .)
    ELSIF           reduce using rule 9 (cuerpo -> declaracion .)
    PUTS            shift and go to state 14
    VARIABLE_LOCAL  shift and go to state 8
    VARIABLE_INSTANCE shift and go to state 15
    VARIABLE_CLASS  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 17
    CONSTANT        shift and go to state 18
    NUMBER          shift and go to state 19
    L_PAREN         shift and go to state 9

    declaracion                    shift and go to state 79
    cuerpo                         shift and go to state 90
    print                          shift and go to state 80
    expresion                      shift and go to state 81
    variable                       shift and go to state 10
    term                           shift and go to state 11

state 80

    (11) cuerpo -> print .
    (12) cuerpo -> print . cuerpo
    (9) cuerpo -> . declaracion
    (10) cuerpo -> . declaracion cuerpo
    (11) cuerpo -> . print
    (12) cuerpo -> . print cuerpo
    (13) cuerpo -> . expresion
    (14) cuerpo -> . expresion cuerpo
    (15) declaracion -> . variable EQUAL expresion
    (39) print -> . PUTS L_PAREN expresion R_PAREN
    (40) print -> . PUTS L_PAREN variable R_PAREN
    (41) print -> . PUTS L_PAREN R_PAREN
    (42) print -> . PUTS STRING
    (21) expresion -> . expresion PLUS term
    (22) expresion -> . expresion MINUS term
    (23) expresion -> . expresion MULTIPLICATION term
    (24) expresion -> . expresion DIVIDE term
    (25) expresion -> . expresion EXPONENT term
    (26) expresion -> . expresion MODULE term
    (27) expresion -> . expresion AND_LOGIC term
    (28) expresion -> . expresion OR_LOGIC term
    (29) expresion -> . expresion EQUALITY term
    (30) expresion -> . expresion EQUALITY_OF_CASE term
    (31) expresion -> . expresion GREATER_EQUAL term
    (32) expresion -> . expresion GREATER_THAN term
    (33) expresion -> . expresion SMALLER_THAN term
    (34) expresion -> . expresion SMALLER_EQUAL term
    (35) expresion -> . term
    (16) variable -> . VARIABLE_LOCAL
    (17) variable -> . VARIABLE_INSTANCE
    (18) variable -> . VARIABLE_CLASS
    (19) variable -> . VARIABLE_GLOBAL
    (20) variable -> . CONSTANT
    (36) term -> . NUMBER
    (37) term -> . variable
    (38) term -> . L_PAREN expresion R_PAREN

    END             reduce using rule 11 (cuerpo -> print .)
    ELSE            reduce using rule 11 (cuerpo -> print .)
    ELSIF           reduce using rule 11 (cuerpo -> print .)
    PUTS            shift and go to state 14
    VARIABLE_LOCAL  shift and go to state 8
    VARIABLE_INSTANCE shift and go to state 15
    VARIABLE_CLASS  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 17
    CONSTANT        shift and go to state 18
    NUMBER          shift and go to state 19
    L_PAREN         shift and go to state 9

    print                          shift and go to state 80
    cuerpo                         shift and go to state 91
    declaracion                    shift and go to state 79
    expresion                      shift and go to state 81
    variable                       shift and go to state 10
    term                           shift and go to state 11

state 81

    (13) cuerpo -> expresion .
    (14) cuerpo -> expresion . cuerpo
    (21) expresion -> expresion . PLUS term
    (22) expresion -> expresion . MINUS term
    (23) expresion -> expresion . MULTIPLICATION term
    (24) expresion -> expresion . DIVIDE term
    (25) expresion -> expresion . EXPONENT term
    (26) expresion -> expresion . MODULE term
    (27) expresion -> expresion . AND_LOGIC term
    (28) expresion -> expresion . OR_LOGIC term
    (29) expresion -> expresion . EQUALITY term
    (30) expresion -> expresion . EQUALITY_OF_CASE term
    (31) expresion -> expresion . GREATER_EQUAL term
    (32) expresion -> expresion . GREATER_THAN term
    (33) expresion -> expresion . SMALLER_THAN term
    (34) expresion -> expresion . SMALLER_EQUAL term
    (9) cuerpo -> . declaracion
    (10) cuerpo -> . declaracion cuerpo
    (11) cuerpo -> . print
    (12) cuerpo -> . print cuerpo
    (13) cuerpo -> . expresion
    (14) cuerpo -> . expresion cuerpo
    (15) declaracion -> . variable EQUAL expresion
    (39) print -> . PUTS L_PAREN expresion R_PAREN
    (40) print -> . PUTS L_PAREN variable R_PAREN
    (41) print -> . PUTS L_PAREN R_PAREN
    (42) print -> . PUTS STRING
    (21) expresion -> . expresion PLUS term
    (22) expresion -> . expresion MINUS term
    (23) expresion -> . expresion MULTIPLICATION term
    (24) expresion -> . expresion DIVIDE term
    (25) expresion -> . expresion EXPONENT term
    (26) expresion -> . expresion MODULE term
    (27) expresion -> . expresion AND_LOGIC term
    (28) expresion -> . expresion OR_LOGIC term
    (29) expresion -> . expresion EQUALITY term
    (30) expresion -> . expresion EQUALITY_OF_CASE term
    (31) expresion -> . expresion GREATER_EQUAL term
    (32) expresion -> . expresion GREATER_THAN term
    (33) expresion -> . expresion SMALLER_THAN term
    (34) expresion -> . expresion SMALLER_EQUAL term
    (35) expresion -> . term
    (16) variable -> . VARIABLE_LOCAL
    (17) variable -> . VARIABLE_INSTANCE
    (18) variable -> . VARIABLE_CLASS
    (19) variable -> . VARIABLE_GLOBAL
    (20) variable -> . CONSTANT
    (36) term -> . NUMBER
    (37) term -> . variable
    (38) term -> . L_PAREN expresion R_PAREN

    END             reduce using rule 13 (cuerpo -> expresion .)
    ELSE            reduce using rule 13 (cuerpo -> expresion .)
    ELSIF           reduce using rule 13 (cuerpo -> expresion .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    MULTIPLICATION  shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    MODULE          shift and go to state 31
    AND_LOGIC       shift and go to state 32
    OR_LOGIC        shift and go to state 33
    EQUALITY        shift and go to state 34
    EQUALITY_OF_CASE shift and go to state 35
    GREATER_EQUAL   shift and go to state 36
    GREATER_THAN    shift and go to state 37
    SMALLER_THAN    shift and go to state 38
    SMALLER_EQUAL   shift and go to state 39
    PUTS            shift and go to state 14
    VARIABLE_LOCAL  shift and go to state 8
    VARIABLE_INSTANCE shift and go to state 15
    VARIABLE_CLASS  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 17
    CONSTANT        shift and go to state 18
    NUMBER          shift and go to state 19
    L_PAREN         shift and go to state 9

    expresion                      shift and go to state 81
    cuerpo                         shift and go to state 92
    term                           shift and go to state 11
    declaracion                    shift and go to state 79
    print                          shift and go to state 80
    variable                       shift and go to state 10

state 82

    (49) estructuraelseif -> ELSIF expresion . cuerpo
    (21) expresion -> expresion . PLUS term
    (22) expresion -> expresion . MINUS term
    (23) expresion -> expresion . MULTIPLICATION term
    (24) expresion -> expresion . DIVIDE term
    (25) expresion -> expresion . EXPONENT term
    (26) expresion -> expresion . MODULE term
    (27) expresion -> expresion . AND_LOGIC term
    (28) expresion -> expresion . OR_LOGIC term
    (29) expresion -> expresion . EQUALITY term
    (30) expresion -> expresion . EQUALITY_OF_CASE term
    (31) expresion -> expresion . GREATER_EQUAL term
    (32) expresion -> expresion . GREATER_THAN term
    (33) expresion -> expresion . SMALLER_THAN term
    (34) expresion -> expresion . SMALLER_EQUAL term
    (9) cuerpo -> . declaracion
    (10) cuerpo -> . declaracion cuerpo
    (11) cuerpo -> . print
    (12) cuerpo -> . print cuerpo
    (13) cuerpo -> . expresion
    (14) cuerpo -> . expresion cuerpo
    (15) declaracion -> . variable EQUAL expresion
    (39) print -> . PUTS L_PAREN expresion R_PAREN
    (40) print -> . PUTS L_PAREN variable R_PAREN
    (41) print -> . PUTS L_PAREN R_PAREN
    (42) print -> . PUTS STRING
    (21) expresion -> . expresion PLUS term
    (22) expresion -> . expresion MINUS term
    (23) expresion -> . expresion MULTIPLICATION term
    (24) expresion -> . expresion DIVIDE term
    (25) expresion -> . expresion EXPONENT term
    (26) expresion -> . expresion MODULE term
    (27) expresion -> . expresion AND_LOGIC term
    (28) expresion -> . expresion OR_LOGIC term
    (29) expresion -> . expresion EQUALITY term
    (30) expresion -> . expresion EQUALITY_OF_CASE term
    (31) expresion -> . expresion GREATER_EQUAL term
    (32) expresion -> . expresion GREATER_THAN term
    (33) expresion -> . expresion SMALLER_THAN term
    (34) expresion -> . expresion SMALLER_EQUAL term
    (35) expresion -> . term
    (16) variable -> . VARIABLE_LOCAL
    (17) variable -> . VARIABLE_INSTANCE
    (18) variable -> . VARIABLE_CLASS
    (19) variable -> . VARIABLE_GLOBAL
    (20) variable -> . CONSTANT
    (36) term -> . NUMBER
    (37) term -> . variable
    (38) term -> . L_PAREN expresion R_PAREN

    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    MULTIPLICATION  shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    MODULE          shift and go to state 31
    AND_LOGIC       shift and go to state 32
    OR_LOGIC        shift and go to state 33
    EQUALITY        shift and go to state 34
    EQUALITY_OF_CASE shift and go to state 35
    GREATER_EQUAL   shift and go to state 36
    GREATER_THAN    shift and go to state 37
    SMALLER_THAN    shift and go to state 38
    SMALLER_EQUAL   shift and go to state 39
    PUTS            shift and go to state 14
    VARIABLE_LOCAL  shift and go to state 8
    VARIABLE_INSTANCE shift and go to state 15
    VARIABLE_CLASS  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 17
    CONSTANT        shift and go to state 18
    NUMBER          shift and go to state 19
    L_PAREN         shift and go to state 9

    expresion                      shift and go to state 81
    cuerpo                         shift and go to state 93
    term                           shift and go to state 11
    declaracion                    shift and go to state 79
    print                          shift and go to state 80
    variable                       shift and go to state 10

state 83

    (48) estructuraif -> IF expresion cuerpo .

    END             reduce using rule 48 (estructuraif -> IF expresion cuerpo .)
    ELSE            reduce using rule 48 (estructuraif -> IF expresion cuerpo .)
    ELSIF           reduce using rule 48 (estructuraif -> IF expresion cuerpo .)


state 84

    (53) sentenciafor -> FOR variable IN . L_PAREN NUMBER DOUBLE_POINT NUMBER R_PAREN cuerpo

    L_PAREN         shift and go to state 94


state 85

    (54) sentenciawhile -> WHILE expresion cuerpo .

    END             reduce using rule 54 (sentenciawhile -> WHILE expresion cuerpo .)


state 86

    (7) parametros -> VARIABLE_LOCAL .
    (8) parametros -> VARIABLE_LOCAL . COMMA parametros

    R_PAREN         reduce using rule 7 (parametros -> VARIABLE_LOCAL .)
    COMMA           shift and go to state 95


state 87

    (6) funcion -> DEF VARIABLE_LOCAL L_PAREN parametros . R_PAREN cuerpo END

    R_PAREN         shift and go to state 96


state 88

    (39) print -> PUTS L_PAREN expresion R_PAREN .

    $end            reduce using rule 39 (print -> PUTS L_PAREN expresion R_PAREN .)
    PUTS            reduce using rule 39 (print -> PUTS L_PAREN expresion R_PAREN .)
    VARIABLE_LOCAL  reduce using rule 39 (print -> PUTS L_PAREN expresion R_PAREN .)
    VARIABLE_INSTANCE reduce using rule 39 (print -> PUTS L_PAREN expresion R_PAREN .)
    VARIABLE_CLASS  reduce using rule 39 (print -> PUTS L_PAREN expresion R_PAREN .)
    VARIABLE_GLOBAL reduce using rule 39 (print -> PUTS L_PAREN expresion R_PAREN .)
    CONSTANT        reduce using rule 39 (print -> PUTS L_PAREN expresion R_PAREN .)
    NUMBER          reduce using rule 39 (print -> PUTS L_PAREN expresion R_PAREN .)
    L_PAREN         reduce using rule 39 (print -> PUTS L_PAREN expresion R_PAREN .)
    END             reduce using rule 39 (print -> PUTS L_PAREN expresion R_PAREN .)
    ELSE            reduce using rule 39 (print -> PUTS L_PAREN expresion R_PAREN .)
    ELSIF           reduce using rule 39 (print -> PUTS L_PAREN expresion R_PAREN .)


state 89

    (40) print -> PUTS L_PAREN variable R_PAREN .

    $end            reduce using rule 40 (print -> PUTS L_PAREN variable R_PAREN .)
    PUTS            reduce using rule 40 (print -> PUTS L_PAREN variable R_PAREN .)
    VARIABLE_LOCAL  reduce using rule 40 (print -> PUTS L_PAREN variable R_PAREN .)
    VARIABLE_INSTANCE reduce using rule 40 (print -> PUTS L_PAREN variable R_PAREN .)
    VARIABLE_CLASS  reduce using rule 40 (print -> PUTS L_PAREN variable R_PAREN .)
    VARIABLE_GLOBAL reduce using rule 40 (print -> PUTS L_PAREN variable R_PAREN .)
    CONSTANT        reduce using rule 40 (print -> PUTS L_PAREN variable R_PAREN .)
    NUMBER          reduce using rule 40 (print -> PUTS L_PAREN variable R_PAREN .)
    L_PAREN         reduce using rule 40 (print -> PUTS L_PAREN variable R_PAREN .)
    END             reduce using rule 40 (print -> PUTS L_PAREN variable R_PAREN .)
    ELSE            reduce using rule 40 (print -> PUTS L_PAREN variable R_PAREN .)
    ELSIF           reduce using rule 40 (print -> PUTS L_PAREN variable R_PAREN .)


state 90

    (10) cuerpo -> declaracion cuerpo .

    END             reduce using rule 10 (cuerpo -> declaracion cuerpo .)
    ELSE            reduce using rule 10 (cuerpo -> declaracion cuerpo .)
    ELSIF           reduce using rule 10 (cuerpo -> declaracion cuerpo .)


state 91

    (12) cuerpo -> print cuerpo .

    END             reduce using rule 12 (cuerpo -> print cuerpo .)
    ELSE            reduce using rule 12 (cuerpo -> print cuerpo .)
    ELSIF           reduce using rule 12 (cuerpo -> print cuerpo .)


state 92

    (14) cuerpo -> expresion cuerpo .

    END             reduce using rule 14 (cuerpo -> expresion cuerpo .)
    ELSE            reduce using rule 14 (cuerpo -> expresion cuerpo .)
    ELSIF           reduce using rule 14 (cuerpo -> expresion cuerpo .)


state 93

    (49) estructuraelseif -> ELSIF expresion cuerpo .

    END             reduce using rule 49 (estructuraelseif -> ELSIF expresion cuerpo .)


state 94

    (53) sentenciafor -> FOR variable IN L_PAREN . NUMBER DOUBLE_POINT NUMBER R_PAREN cuerpo

    NUMBER          shift and go to state 97


state 95

    (8) parametros -> VARIABLE_LOCAL COMMA . parametros
    (7) parametros -> . VARIABLE_LOCAL
    (8) parametros -> . VARIABLE_LOCAL COMMA parametros

    VARIABLE_LOCAL  shift and go to state 86

    parametros                     shift and go to state 98

state 96

    (6) funcion -> DEF VARIABLE_LOCAL L_PAREN parametros R_PAREN . cuerpo END
    (9) cuerpo -> . declaracion
    (10) cuerpo -> . declaracion cuerpo
    (11) cuerpo -> . print
    (12) cuerpo -> . print cuerpo
    (13) cuerpo -> . expresion
    (14) cuerpo -> . expresion cuerpo
    (15) declaracion -> . variable EQUAL expresion
    (39) print -> . PUTS L_PAREN expresion R_PAREN
    (40) print -> . PUTS L_PAREN variable R_PAREN
    (41) print -> . PUTS L_PAREN R_PAREN
    (42) print -> . PUTS STRING
    (21) expresion -> . expresion PLUS term
    (22) expresion -> . expresion MINUS term
    (23) expresion -> . expresion MULTIPLICATION term
    (24) expresion -> . expresion DIVIDE term
    (25) expresion -> . expresion EXPONENT term
    (26) expresion -> . expresion MODULE term
    (27) expresion -> . expresion AND_LOGIC term
    (28) expresion -> . expresion OR_LOGIC term
    (29) expresion -> . expresion EQUALITY term
    (30) expresion -> . expresion EQUALITY_OF_CASE term
    (31) expresion -> . expresion GREATER_EQUAL term
    (32) expresion -> . expresion GREATER_THAN term
    (33) expresion -> . expresion SMALLER_THAN term
    (34) expresion -> . expresion SMALLER_EQUAL term
    (35) expresion -> . term
    (16) variable -> . VARIABLE_LOCAL
    (17) variable -> . VARIABLE_INSTANCE
    (18) variable -> . VARIABLE_CLASS
    (19) variable -> . VARIABLE_GLOBAL
    (20) variable -> . CONSTANT
    (36) term -> . NUMBER
    (37) term -> . variable
    (38) term -> . L_PAREN expresion R_PAREN

    PUTS            shift and go to state 14
    VARIABLE_LOCAL  shift and go to state 8
    VARIABLE_INSTANCE shift and go to state 15
    VARIABLE_CLASS  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 17
    CONSTANT        shift and go to state 18
    NUMBER          shift and go to state 19
    L_PAREN         shift and go to state 9

    cuerpo                         shift and go to state 99
    declaracion                    shift and go to state 79
    print                          shift and go to state 80
    expresion                      shift and go to state 81
    variable                       shift and go to state 10
    term                           shift and go to state 11

state 97

    (53) sentenciafor -> FOR variable IN L_PAREN NUMBER . DOUBLE_POINT NUMBER R_PAREN cuerpo

    DOUBLE_POINT    shift and go to state 100


state 98

    (8) parametros -> VARIABLE_LOCAL COMMA parametros .

    R_PAREN         reduce using rule 8 (parametros -> VARIABLE_LOCAL COMMA parametros .)


state 99

    (6) funcion -> DEF VARIABLE_LOCAL L_PAREN parametros R_PAREN cuerpo . END

    END             shift and go to state 101


state 100

    (53) sentenciafor -> FOR variable IN L_PAREN NUMBER DOUBLE_POINT . NUMBER R_PAREN cuerpo

    NUMBER          shift and go to state 102


state 101

    (6) funcion -> DEF VARIABLE_LOCAL L_PAREN parametros R_PAREN cuerpo END .

    $end            reduce using rule 6 (funcion -> DEF VARIABLE_LOCAL L_PAREN parametros R_PAREN cuerpo END .)


state 102

    (53) sentenciafor -> FOR variable IN L_PAREN NUMBER DOUBLE_POINT NUMBER . R_PAREN cuerpo

    R_PAREN         shift and go to state 103


state 103

    (53) sentenciafor -> FOR variable IN L_PAREN NUMBER DOUBLE_POINT NUMBER R_PAREN . cuerpo
    (9) cuerpo -> . declaracion
    (10) cuerpo -> . declaracion cuerpo
    (11) cuerpo -> . print
    (12) cuerpo -> . print cuerpo
    (13) cuerpo -> . expresion
    (14) cuerpo -> . expresion cuerpo
    (15) declaracion -> . variable EQUAL expresion
    (39) print -> . PUTS L_PAREN expresion R_PAREN
    (40) print -> . PUTS L_PAREN variable R_PAREN
    (41) print -> . PUTS L_PAREN R_PAREN
    (42) print -> . PUTS STRING
    (21) expresion -> . expresion PLUS term
    (22) expresion -> . expresion MINUS term
    (23) expresion -> . expresion MULTIPLICATION term
    (24) expresion -> . expresion DIVIDE term
    (25) expresion -> . expresion EXPONENT term
    (26) expresion -> . expresion MODULE term
    (27) expresion -> . expresion AND_LOGIC term
    (28) expresion -> . expresion OR_LOGIC term
    (29) expresion -> . expresion EQUALITY term
    (30) expresion -> . expresion EQUALITY_OF_CASE term
    (31) expresion -> . expresion GREATER_EQUAL term
    (32) expresion -> . expresion GREATER_THAN term
    (33) expresion -> . expresion SMALLER_THAN term
    (34) expresion -> . expresion SMALLER_EQUAL term
    (35) expresion -> . term
    (16) variable -> . VARIABLE_LOCAL
    (17) variable -> . VARIABLE_INSTANCE
    (18) variable -> . VARIABLE_CLASS
    (19) variable -> . VARIABLE_GLOBAL
    (20) variable -> . CONSTANT
    (36) term -> . NUMBER
    (37) term -> . variable
    (38) term -> . L_PAREN expresion R_PAREN

    PUTS            shift and go to state 14
    VARIABLE_LOCAL  shift and go to state 8
    VARIABLE_INSTANCE shift and go to state 15
    VARIABLE_CLASS  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 17
    CONSTANT        shift and go to state 18
    NUMBER          shift and go to state 19
    L_PAREN         shift and go to state 9

    variable                       shift and go to state 10
    cuerpo                         shift and go to state 104
    declaracion                    shift and go to state 79
    print                          shift and go to state 80
    expresion                      shift and go to state 81
    term                           shift and go to state 11

state 104

    (53) sentenciafor -> FOR variable IN L_PAREN NUMBER DOUBLE_POINT NUMBER R_PAREN cuerpo .

    END             reduce using rule 53 (sentenciafor -> FOR variable IN L_PAREN NUMBER DOUBLE_POINT NUMBER R_PAREN cuerpo .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for R_PAREN in state 75 resolved as shift
