
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AND_LOGIC BEGIN BREAK CASE CLASS COINCIDENCE COMMA COMPOSITION CONSTANT DEF DIVIDE DO DOUBLE_POINT DOUBLE_QUOTE ELSE ELSIF END ENSURE EQUAL EQUALITY EQUALITY_OF_CASE EXPONENT FALSE FOR GREATER_EQUAL GREATER_THAN IF IN L_PAREN L_SQUARE_BRACKET MINUS MODULE MULTIPLICATION NEGATION NIL NOT NUMBER OR OR_LOGIC PLUS PUTS QUOTATION_MARK RESCUE RETRY RETURN R_PAREN R_SQUARE_BRACKET SMALLER_EQUAL SMALLER_THAN STRING THEN TRUE UNLESS UNTIL VARIABLE_CLASS VARIABLE_GLOBAL VARIABLE_INSTANCE VARIABLE_LOCAL WHEN WHILE WRENCH_L WRENCH_Rsentencia : funcion\n                | declaracion\n                | expresion\n                | estructura\n                | printfuncion : DEF VARIABLE_LOCAL L_PAREN parametros R_PAREN cuerpo ENDparametros : VARIABLE_LOCAL\n            | VARIABLE_LOCAL COMMA parametroscuerpo : declaracion\n            | declaracion cuerpo\n            | print\n            | print cuerpo\n            | expresion\n            | expresion cuerpo\n    declaracion : variable EQUAL expresionvariable : VARIABLE_LOCAL\n            | VARIABLE_INSTANCE\n            | VARIABLE_CLASS\n            | VARIABLE_GLOBAL\n            | CONSTANTexpresion : expresion PLUS termexpresion : expresion MINUS termexpresion : expresion MULTIPLICATION termexpresion : expresion DIVIDE termexpresion : expresion EXPONENT termexpresion : expresion MODULE termexpresion : expresion AND_LOGIC termexpresion : expresion OR_LOGIC termexpresion : expresion EQUALITY termexpresion : expresion EQUALITY_OF_CASE termexpresion : expresion GREATER_EQUAL termexpresion : expresion GREATER_THAN termexpresion : expresion SMALLER_THAN termexpresion : expresion SMALLER_EQUAL termexpresion : termterm : NUMBERterm : variableterm : L_PAREN expresion R_PARENprint : PUTS L_PAREN expresion R_PARENprint : PUTS L_PAREN variable R_PARENprint : PUTS L_PAREN R_PARENprint : PUTS STRINGestructura : estructuraCondicional\n                    | estructuraIterativaestructuraCondicional : estructuraif END\n                             | estructuraif estructuraelse END\n                             | estructuraif estructuraelseif ENDestructuraif : IF expresion cuerpoestructuraelseif : ELSIF expresion cuerpoestructuraelse : ELSE cuerpoestructuraIterativa : sentenciafor END\n                            | sentenciawhile ENDsentenciafor : FOR variable IN L_PAREN NUMBER DOUBLE_POINT NUMBER R_PAREN cuerposentenciawhile : WHILE expresion cuerpo'
    
_lr_action_items = {'DEF':([0,],[7,]),'PUTS':([0,8,10,11,15,16,17,18,19,42,45,49,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,74,79,80,81,82,88,89,96,103,],[14,-16,-37,-35,-17,-18,-19,-20,-36,-37,-42,14,14,14,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-38,-15,-41,14,14,14,14,-39,-40,14,14,]),'VARIABLE_LOCAL':([0,7,8,9,10,11,15,16,17,18,19,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,44,45,49,50,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,79,80,81,82,88,89,95,96,103,],[8,40,-16,8,-37,-35,-17,-18,-19,-20,-36,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-37,8,8,-42,8,8,8,8,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,86,-38,-15,-41,8,8,8,8,-39,-40,86,8,8,]),'VARIABLE_INSTANCE':([0,8,9,10,11,15,16,17,18,19,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,44,45,49,50,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,74,79,80,81,82,88,89,96,103,],[15,-16,15,-37,-35,-17,-18,-19,-20,-36,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-37,15,15,-42,15,15,15,15,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-38,-15,-41,15,15,15,15,-39,-40,15,15,]),'VARIABLE_CLASS':([0,8,9,10,11,15,16,17,18,19,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,44,45,49,50,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,74,79,80,81,82,88,89,96,103,],[16,-16,16,-37,-35,-17,-18,-19,-20,-36,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-37,16,16,-42,16,16,16,16,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-38,-15,-41,16,16,16,16,-39,-40,16,16,]),'VARIABLE_GLOBAL':([0,8,9,10,11,15,16,17,18,19,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,44,45,49,50,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,74,79,80,81,82,88,89,96,103,],[17,-16,17,-37,-35,-17,-18,-19,-20,-36,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-37,17,17,-42,17,17,17,17,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-38,-15,-41,17,17,17,17,-39,-40,17,17,]),'CONSTANT':([0,8,9,10,11,15,16,17,18,19,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,44,45,49,50,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,74,79,80,81,82,88,89,96,103,],[18,-16,18,-37,-35,-17,-18,-19,-20,-36,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-37,18,18,-42,18,18,18,18,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-38,-15,-41,18,18,18,18,-39,-40,18,18,]),'NUMBER':([0,8,9,10,11,15,16,17,18,19,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,44,45,49,50,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,74,79,80,81,82,88,89,94,96,100,103,],[19,-16,19,-37,-35,-17,-18,-19,-20,-36,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-37,19,19,-42,19,19,19,19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-38,-15,-41,19,19,19,19,-39,-40,97,19,102,19,]),'L_PAREN':([0,8,9,10,11,14,15,16,17,18,19,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,49,50,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,74,79,80,81,82,84,88,89,96,103,],[9,-16,9,-37,-35,44,-17,-18,-19,-20,-36,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,70,-37,9,9,-42,9,9,9,9,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-38,-15,-41,9,9,9,9,94,-39,-40,9,9,]),'IF':([0,],[23,]),'FOR':([0,],[24,]),'WHILE':([0,],[25,]),'$end':([1,2,3,4,5,6,8,10,11,12,13,15,16,17,18,19,42,45,46,51,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,74,76,77,88,89,101,],[0,-1,-2,-3,-4,-5,-16,-37,-35,-43,-44,-17,-18,-19,-20,-36,-37,-42,-45,-51,-52,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-38,-15,-41,-46,-47,-39,-40,-6,]),'PLUS':([4,8,10,11,15,16,17,18,19,41,42,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,81,82,],[26,-16,-37,-35,-17,-18,-19,-20,-36,26,-37,26,26,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-38,26,26,-37,26,26,]),'MINUS':([4,8,10,11,15,16,17,18,19,41,42,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,81,82,],[27,-16,-37,-35,-17,-18,-19,-20,-36,27,-37,27,27,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-38,27,27,-37,27,27,]),'MULTIPLICATION':([4,8,10,11,15,16,17,18,19,41,42,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,81,82,],[28,-16,-37,-35,-17,-18,-19,-20,-36,28,-37,28,28,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-38,28,28,-37,28,28,]),'DIVIDE':([4,8,10,11,15,16,17,18,19,41,42,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,81,82,],[29,-16,-37,-35,-17,-18,-19,-20,-36,29,-37,29,29,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-38,29,29,-37,29,29,]),'EXPONENT':([4,8,10,11,15,16,17,18,19,41,42,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,81,82,],[30,-16,-37,-35,-17,-18,-19,-20,-36,30,-37,30,30,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-38,30,30,-37,30,30,]),'MODULE':([4,8,10,11,15,16,17,18,19,41,42,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,81,82,],[31,-16,-37,-35,-17,-18,-19,-20,-36,31,-37,31,31,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-38,31,31,-37,31,31,]),'AND_LOGIC':([4,8,10,11,15,16,17,18,19,41,42,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,81,82,],[32,-16,-37,-35,-17,-18,-19,-20,-36,32,-37,32,32,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-38,32,32,-37,32,32,]),'OR_LOGIC':([4,8,10,11,15,16,17,18,19,41,42,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,81,82,],[33,-16,-37,-35,-17,-18,-19,-20,-36,33,-37,33,33,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-38,33,33,-37,33,33,]),'EQUALITY':([4,8,10,11,15,16,17,18,19,41,42,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,81,82,],[34,-16,-37,-35,-17,-18,-19,-20,-36,34,-37,34,34,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-38,34,34,-37,34,34,]),'EQUALITY_OF_CASE':([4,8,10,11,15,16,17,18,19,41,42,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,81,82,],[35,-16,-37,-35,-17,-18,-19,-20,-36,35,-37,35,35,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-38,35,35,-37,35,35,]),'GREATER_EQUAL':([4,8,10,11,15,16,17,18,19,41,42,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,81,82,],[36,-16,-37,-35,-17,-18,-19,-20,-36,36,-37,36,36,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-38,36,36,-37,36,36,]),'GREATER_THAN':([4,8,10,11,15,16,17,18,19,41,42,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,81,82,],[37,-16,-37,-35,-17,-18,-19,-20,-36,37,-37,37,37,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-38,37,37,-37,37,37,]),'SMALLER_THAN':([4,8,10,11,15,16,17,18,19,41,42,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,81,82,],[38,-16,-37,-35,-17,-18,-19,-20,-36,38,-37,38,38,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-38,38,38,-37,38,38,]),'SMALLER_EQUAL':([4,8,10,11,15,16,17,18,19,41,42,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,81,82,],[39,-16,-37,-35,-17,-18,-19,-20,-36,39,-37,39,39,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-38,39,39,-37,39,39,]),'EQUAL':([8,10,15,16,17,18,],[-16,43,-17,-18,-19,-20,]),'R_PAREN':([8,11,15,16,17,18,19,41,42,44,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,73,75,86,87,98,102,],[-16,-35,-17,-18,-19,-20,-36,71,-37,74,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-38,88,89,-7,96,-8,103,]),'IN':([8,15,16,17,18,54,],[-16,-17,-18,-19,-20,84,]),'END':([8,10,11,15,16,17,18,19,20,21,22,42,45,47,48,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,74,78,79,80,81,83,85,88,89,90,91,92,93,99,104,],[-16,-37,-35,-17,-18,-19,-20,-36,46,51,52,-37,-42,76,77,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-38,-15,-41,-50,-9,-11,-13,-48,-54,-39,-40,-10,-12,-14,-49,101,-53,]),'ELSE':([8,10,11,15,16,17,18,19,20,42,45,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,74,79,80,81,83,88,89,90,91,92,],[-16,-37,-35,-17,-18,-19,-20,-36,49,-37,-42,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-38,-15,-41,-9,-11,-13,-48,-39,-40,-10,-12,-14,]),'ELSIF':([8,10,11,15,16,17,18,19,20,42,45,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,74,79,80,81,83,88,89,90,91,92,],[-16,-37,-35,-17,-18,-19,-20,-36,50,-37,-42,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-38,-15,-41,-9,-11,-13,-48,-39,-40,-10,-12,-14,]),'STRING':([14,],[45,]),'COMMA':([86,],[95,]),'DOUBLE_POINT':([97,],[100,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sentencia':([0,],[1,]),'funcion':([0,],[2,]),'declaracion':([0,49,53,55,79,80,81,82,96,103,],[3,79,79,79,79,79,79,79,79,79,]),'expresion':([0,9,23,25,43,44,49,50,53,55,79,80,81,82,96,103,],[4,41,53,55,72,73,81,82,81,81,81,81,81,81,81,81,]),'estructura':([0,],[5,]),'print':([0,49,53,55,79,80,81,82,96,103,],[6,80,80,80,80,80,80,80,80,80,]),'variable':([0,9,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,43,44,49,50,53,55,79,80,81,82,96,103,],[10,42,42,54,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,75,10,42,10,10,10,10,10,10,10,10,]),'term':([0,9,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,43,44,49,50,53,55,79,80,81,82,96,103,],[11,11,11,11,56,57,58,59,60,61,62,63,64,65,66,67,68,69,11,11,11,11,11,11,11,11,11,11,11,11,]),'estructuraCondicional':([0,],[12,]),'estructuraIterativa':([0,],[13,]),'estructuraif':([0,],[20,]),'sentenciafor':([0,],[21,]),'sentenciawhile':([0,],[22,]),'estructuraelse':([20,],[47,]),'estructuraelseif':([20,],[48,]),'cuerpo':([49,53,55,79,80,81,82,96,103,],[78,83,85,90,91,92,93,99,104,]),'parametros':([70,95,],[87,98,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sentencia","S'",1,None,None,None),
  ('sentencia -> funcion','sentencia',1,'p_sentencia','Analizador_Sintactico.py',7),
  ('sentencia -> declaracion','sentencia',1,'p_sentencia','Analizador_Sintactico.py',8),
  ('sentencia -> expresion','sentencia',1,'p_sentencia','Analizador_Sintactico.py',9),
  ('sentencia -> estructura','sentencia',1,'p_sentencia','Analizador_Sintactico.py',10),
  ('sentencia -> print','sentencia',1,'p_sentencia','Analizador_Sintactico.py',11),
  ('funcion -> DEF VARIABLE_LOCAL L_PAREN parametros R_PAREN cuerpo END','funcion',7,'p_funcion','Analizador_Sintactico.py',16),
  ('parametros -> VARIABLE_LOCAL','parametros',1,'p_parametros','Analizador_Sintactico.py',18),
  ('parametros -> VARIABLE_LOCAL COMMA parametros','parametros',3,'p_parametros','Analizador_Sintactico.py',19),
  ('cuerpo -> declaracion','cuerpo',1,'p_cuerpo','Analizador_Sintactico.py',21),
  ('cuerpo -> declaracion cuerpo','cuerpo',2,'p_cuerpo','Analizador_Sintactico.py',22),
  ('cuerpo -> print','cuerpo',1,'p_cuerpo','Analizador_Sintactico.py',23),
  ('cuerpo -> print cuerpo','cuerpo',2,'p_cuerpo','Analizador_Sintactico.py',24),
  ('cuerpo -> expresion','cuerpo',1,'p_cuerpo','Analizador_Sintactico.py',25),
  ('cuerpo -> expresion cuerpo','cuerpo',2,'p_cuerpo','Analizador_Sintactico.py',26),
  ('declaracion -> variable EQUAL expresion','declaracion',3,'p_declaracion','Analizador_Sintactico.py',32),
  ('variable -> VARIABLE_LOCAL','variable',1,'p_variable','Analizador_Sintactico.py',34),
  ('variable -> VARIABLE_INSTANCE','variable',1,'p_variable','Analizador_Sintactico.py',35),
  ('variable -> VARIABLE_CLASS','variable',1,'p_variable','Analizador_Sintactico.py',36),
  ('variable -> VARIABLE_GLOBAL','variable',1,'p_variable','Analizador_Sintactico.py',37),
  ('variable -> CONSTANT','variable',1,'p_variable','Analizador_Sintactico.py',38),
  ('expresion -> expresion PLUS term','expresion',3,'p_expresion_plus','Analizador_Sintactico.py',43),
  ('expresion -> expresion MINUS term','expresion',3,'p_expresion_minus','Analizador_Sintactico.py',45),
  ('expresion -> expresion MULTIPLICATION term','expresion',3,'p_expresion_multiplication','Analizador_Sintactico.py',47),
  ('expresion -> expresion DIVIDE term','expresion',3,'p_expresion_divide','Analizador_Sintactico.py',49),
  ('expresion -> expresion EXPONENT term','expresion',3,'p_expresion_exponent','Analizador_Sintactico.py',51),
  ('expresion -> expresion MODULE term','expresion',3,'p_expresion_module','Analizador_Sintactico.py',53),
  ('expresion -> expresion AND_LOGIC term','expresion',3,'p_expresion_and_logic','Analizador_Sintactico.py',55),
  ('expresion -> expresion OR_LOGIC term','expresion',3,'p_expresion_or_logic','Analizador_Sintactico.py',57),
  ('expresion -> expresion EQUALITY term','expresion',3,'p_expresion_equality','Analizador_Sintactico.py',59),
  ('expresion -> expresion EQUALITY_OF_CASE term','expresion',3,'p_expresion_equality_of_case','Analizador_Sintactico.py',61),
  ('expresion -> expresion GREATER_EQUAL term','expresion',3,'p_expresion_greater_equal','Analizador_Sintactico.py',63),
  ('expresion -> expresion GREATER_THAN term','expresion',3,'p_expresion_greater_than','Analizador_Sintactico.py',65),
  ('expresion -> expresion SMALLER_THAN term','expresion',3,'p_expresion_smaller_than','Analizador_Sintactico.py',67),
  ('expresion -> expresion SMALLER_EQUAL term','expresion',3,'p_expresion_smaller_equal','Analizador_Sintactico.py',69),
  ('expresion -> term','expresion',1,'p_expresion_term','Analizador_Sintactico.py',71),
  ('term -> NUMBER','term',1,'p_term_number','Analizador_Sintactico.py',73),
  ('term -> variable','term',1,'p_term_var','Analizador_Sintactico.py',75),
  ('term -> L_PAREN expresion R_PAREN','term',3,'p_term_expr','Analizador_Sintactico.py',77),
  ('print -> PUTS L_PAREN expresion R_PAREN','print',4,'p_print_exp','Analizador_Sintactico.py',82),
  ('print -> PUTS L_PAREN variable R_PAREN','print',4,'p_print_var','Analizador_Sintactico.py',84),
  ('print -> PUTS L_PAREN R_PAREN','print',3,'p_print_vac','Analizador_Sintactico.py',86),
  ('print -> PUTS STRING','print',2,'p_print_str','Analizador_Sintactico.py',93),
  ('estructura -> estructuraCondicional','estructura',1,'p_estructura','Analizador_Sintactico.py',96),
  ('estructura -> estructuraIterativa','estructura',1,'p_estructura','Analizador_Sintactico.py',97),
  ('estructuraCondicional -> estructuraif END','estructuraCondicional',2,'p_estructuraCondicional','Analizador_Sintactico.py',100),
  ('estructuraCondicional -> estructuraif estructuraelse END','estructuraCondicional',3,'p_estructuraCondicional','Analizador_Sintactico.py',101),
  ('estructuraCondicional -> estructuraif estructuraelseif END','estructuraCondicional',3,'p_estructuraCondicional','Analizador_Sintactico.py',102),
  ('estructuraif -> IF expresion cuerpo','estructuraif',3,'p_estructuraif','Analizador_Sintactico.py',105),
  ('estructuraelseif -> ELSIF expresion cuerpo','estructuraelseif',3,'p_estructuraelsif','Analizador_Sintactico.py',108),
  ('estructuraelse -> ELSE cuerpo','estructuraelse',2,'p_estructuraelse','Analizador_Sintactico.py',111),
  ('estructuraIterativa -> sentenciafor END','estructuraIterativa',2,'p_estructuraIterativa','Analizador_Sintactico.py',115),
  ('estructuraIterativa -> sentenciawhile END','estructuraIterativa',2,'p_estructuraIterativa','Analizador_Sintactico.py',116),
  ('sentenciafor -> FOR variable IN L_PAREN NUMBER DOUBLE_POINT NUMBER R_PAREN cuerpo','sentenciafor',9,'p_sentenciafor','Analizador_Sintactico.py',119),
  ('sentenciawhile -> WHILE expresion cuerpo','sentenciawhile',3,'p_sentenciawhile','Analizador_Sintactico.py',122),
]
